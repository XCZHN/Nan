<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\ZY-2017-SJG.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\ZY-2017-SJG.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5050169: Last Updated: Fri Jun 29 18:59:44 2018
<BR><P>
<H3>Maximum Stack Usage =        864 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; KeyboardFunction &rArr; ArgCardOperation &rArr; GUI_NetParameters &rArr; GUI_ShowListMenu &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[241]">__user_initial_stackheap</a>
 <LI><a href="#[31]">exit</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[3]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">NMI_Handler</a><BR>
 <LI><a href="#[4]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">HardFault_Handler</a><BR>
 <LI><a href="#[5]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">MemManage_Handler</a><BR>
 <LI><a href="#[6]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">BusFault_Handler</a><BR>
 <LI><a href="#[7]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">UsageFault_Handler</a><BR>
 <LI><a href="#[8]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">SVC_Handler</a><BR>
 <LI><a href="#[9]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">DebugMon_Handler</a><BR>
 <LI><a href="#[a]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">PendSV_Handler</a><BR>
 <LI><a href="#[22]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[22]">ADC_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[22]">ADC_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[23]">BOD_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[34]">BeepCallback</a> from mid_magically.o(.text) referenced from app_main.o(.text)
 <LI><a href="#[6]">BusFault_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2e]">CANActivity_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[25]">CAN_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[26]">DMA_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[9]">DebugMon_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1e]">EINT0_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1f]">EINT1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[20]">EINT2_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[21]">EINT3_IRQHandler</a> from drv_wiegand.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[28]">ENET_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[4]">HardFault_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[16]">I2C0_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[17]">I2C1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[18]">I2C2_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[27]">I2S_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2a]">MCPWM_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[5]">MemManage_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[3]">NMI_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1c]">PLL0_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2c]">PLL1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[15]">PWM1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[a]">PendSV_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2b]">QEI_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[29]">RIT_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1d]">RTC_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2]">Reset_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[19]">SPI_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1a]">SSP0_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1b]">SSP1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[8]">SVC_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[35]">SignalLedBlink</a> from mid_magically.o(.text) referenced from app_main.o(.text)
 <LI><a href="#[b]">SysTick_Handler</a> from mid_systick.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2f]">SystemInit</a> from system_lpc17xx.o(.text) referenced from startup_lpc17xx.o(.text)
 <LI><a href="#[d]">TIMER0_IRQHandler</a> from drv_timer.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[e]">TIMER1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[f]">TIMER2_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[10]">TIMER3_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[36]">Tick_ReadRTC</a> from mid_magically.o(.text) referenced from app_main.o(.text)
 <LI><a href="#[33]">TimeCount</a> from mid_sysconfig.o(.text) referenced from app_main.o(.text)
 <LI><a href="#[32]">TimingDelay_Decrement</a> from mid_sysconfig.o(.text) referenced from app_main.o(.text)
 <LI><a href="#[11]">UART0_IRQHandler</a> from drv_uart.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[12]">UART1_IRQHandler</a> from drv_uart.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[13]">UART2_IRQHandler</a> from drv_uart.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[14]">UART3_IRQHandler</a> from drv_uart.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2d]">USBActivity_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[24]">USB_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[7]">UsageFault_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[c]">WDT_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[39]">__main</a> from __main.o(!!!main) referenced from startup_lpc17xx.o(.text)
 <LI><a href="#[38]">_printf_input_char</a> from _printf_char_common.o(.text) referenced from _printf_char_common.o(.text)
 <LI><a href="#[37]">_sputc</a> from _sputc.o(.text) referenced from noretval__2sprintf.o(.text)
 <LI><a href="#[31]">exit</a> from drv_lcd.o(.constdata) referenced from drv_lcd.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[39]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[3a]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[3c]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[242]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[243]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[244]"></a>__decompress</STRONG> (Thumb, 100 bytes, Stack size unknown bytes, __dclz77c.o(!!dclz77c), UNUSED)

<P><STRONG><a name="[245]"></a>__decompress2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dclz77c.o(!!dclz77c), UNUSED)

<P><STRONG><a name="[246]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[3d]"></a>_printf_d</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_d.o(.ARM.Collect$$_printf_percent$$00000009))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_d &rArr; _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[23a]"></a>_printf_percent</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[3f]"></a>_printf_s</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_s.o(.ARM.Collect$$_printf_percent$$00000014))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = _printf_s &rArr; _printf_string &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
</UL>

<P><STRONG><a name="[247]"></a>_printf_percent_end</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017))

<P><STRONG><a name="[44]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[248]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[249]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[24a]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[24b]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[24c]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[24d]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[24e]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[24f]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[250]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[251]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[252]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[253]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[254]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[255]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[256]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[257]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[258]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[259]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[25a]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[25b]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[25c]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[3b]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[25d]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[41]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[43]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[25e]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[45]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 864 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; KeyboardFunction &rArr; ArgCardOperation &rArr; GUI_NetParameters &rArr; GUI_ShowListMenu &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[25f]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[2f]"></a>SystemInit</STRONG> (Thumb, 298 bytes, Stack size 0 bytes, system_lpc17xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(.text)
</UL>
<P><STRONG><a name="[47]"></a>__aeabi_memset</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, aeabi_memset.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_CardKey
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_ReadCard
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCmdToFingerprint
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_QueryBoxStatusList
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowPassword
</UL>

<P><STRONG><a name="[2]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>BOD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>CANActivity_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>CAN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>DMA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>EINT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>EINT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>EINT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>ENET_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>I2C0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>I2S_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>MCPWM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>PLL0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>PLL1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>PWM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>QEI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>RIT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>SPI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>SSP0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>SSP1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>TIMER1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>TIMER2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>TIMER3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>USBActivity_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>USB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[241]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_lpc17xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[4a]"></a>I2C_SDA_IO_SET</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, drv_eeprom.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EP_ReadByte
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EP_WriteByte
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NO_ACK
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCU_Send_ACK
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCU_Read_ACK
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EP_Stop
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EP_Start
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Eeprom_Init
</UL>

<P><STRONG><a name="[49]"></a>I2C_Eeprom_Init</STRONG> (Thumb, 72 bytes, Stack size 4 bytes, drv_eeprom.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = I2C_Eeprom_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SDA_IO_SET
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
</UL>

<P><STRONG><a name="[4c]"></a>EP_Delay_us</STRONG> (Thumb, 40 bytes, Stack size 12 bytes, drv_eeprom.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = EP_Delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EE_BufferWrite
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EP_ReadByte
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EP_WriteByte
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NO_ACK
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCU_Send_ACK
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCU_Read_ACK
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EP_Stop
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EP_Start
</UL>

<P><STRONG><a name="[4b]"></a>EP_Start</STRONG> (Thumb, 56 bytes, Stack size 4 bytes, drv_eeprom.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EP_Start &rArr; EP_Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EP_Delay_us
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SDA_IO_SET
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EE_BufferRead
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EE_PageWrite
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EE_ByteRead
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EE_ByteWrite
</UL>

<P><STRONG><a name="[4d]"></a>EP_Stop</STRONG> (Thumb, 88 bytes, Stack size 4 bytes, drv_eeprom.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EP_Stop &rArr; EP_Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EP_Delay_us
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SDA_IO_SET
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EE_BufferRead
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EE_PageWrite
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EE_ByteRead
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EE_ByteWrite
</UL>

<P><STRONG><a name="[4e]"></a>MCU_Read_ACK</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, drv_eeprom.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = MCU_Read_ACK &rArr; EP_Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EP_Delay_us
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SDA_IO_SET
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EE_BufferRead
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EE_PageWrite
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EE_ByteRead
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EE_ByteWrite
</UL>

<P><STRONG><a name="[4f]"></a>MCU_Send_ACK</STRONG> (Thumb, 76 bytes, Stack size 4 bytes, drv_eeprom.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = MCU_Send_ACK &rArr; EP_Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EP_Delay_us
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SDA_IO_SET
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EE_BufferRead
</UL>

<P><STRONG><a name="[50]"></a>NO_ACK</STRONG> (Thumb, 76 bytes, Stack size 4 bytes, drv_eeprom.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = NO_ACK &rArr; EP_Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EP_Delay_us
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SDA_IO_SET
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EE_BufferRead
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EE_ByteRead
</UL>

<P><STRONG><a name="[51]"></a>EP_WriteByte</STRONG> (Thumb, 128 bytes, Stack size 12 bytes, drv_eeprom.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = EP_WriteByte &rArr; EP_Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EP_Delay_us
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SDA_IO_SET
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EE_BufferRead
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EE_PageWrite
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EE_ByteRead
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EE_ByteWrite
</UL>

<P><STRONG><a name="[52]"></a>EP_ReadByte</STRONG> (Thumb, 122 bytes, Stack size 12 bytes, drv_eeprom.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = EP_ReadByte &rArr; EP_Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EP_Delay_us
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SDA_IO_SET
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EE_BufferRead
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EE_ByteRead
</UL>

<P><STRONG><a name="[53]"></a>I2C_EE_ByteWrite</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, drv_eeprom.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EP_WriteByte
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCU_Read_ACK
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EP_Stop
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EP_Start
</UL>

<P><STRONG><a name="[54]"></a>I2C_EE_ByteRead</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, drv_eeprom.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EP_ReadByte
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EP_WriteByte
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NO_ACK
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCU_Read_ACK
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EP_Stop
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EP_Start
</UL>

<P><STRONG><a name="[55]"></a>I2C_EE_PageWrite</STRONG> (Thumb, 150 bytes, Stack size 32 bytes, drv_eeprom.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = I2C_EE_PageWrite &rArr; EP_WriteByte &rArr; EP_Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EP_WriteByte
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCU_Read_ACK
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EP_Stop
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EP_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EE_BufferWrite
</UL>

<P><STRONG><a name="[56]"></a>I2C_EE_BufferWrite</STRONG> (Thumb, 340 bytes, Stack size 40 bytes, drv_eeprom.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = I2C_EE_BufferWrite &rArr; I2C_EE_PageWrite &rArr; EP_WriteByte &rArr; EP_Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EE_PageWrite
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EP_Delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddOneValidCardNum
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Set_ValidCardList
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_EepromWrite
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Parameters
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_Parameters
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clr_AllValidCard
</UL>

<P><STRONG><a name="[57]"></a>I2C_EE_BufferRead</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, drv_eeprom.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = I2C_EE_BufferRead &rArr; EP_ReadByte &rArr; EP_Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EP_ReadByte
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EP_WriteByte
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NO_ACK
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCU_Send_ACK
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCU_Read_ACK
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EP_Stop
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EP_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddOneValidCardNum
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckCardValid
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Get_ValidCardList
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_EepromRead
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Parameters
</UL>

<P><STRONG><a name="[58]"></a>encWriteOp</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, drv_enc28j60.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = encWriteOp
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Send1Byte
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetSPI_Enable
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetSPI_Disable
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_ethernet
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ethernet
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encInit
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encWrite
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encSetBank
</UL>

<P><STRONG><a name="[5c]"></a>encReadOp</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, drv_enc28j60.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = encReadOp
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Send1Byte
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Read1Byte
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetSPI_Enable
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetSPI_Disable
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ethernet
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encRead
</UL>

<P><STRONG><a name="[5e]"></a>encReadBuffer</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, drv_enc28j60.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = encReadBuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Send1Byte
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Read1Byte
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetSPI_Enable
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetSPI_Disable
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ethernet
</UL>

<P><STRONG><a name="[5f]"></a>encWriteBuffer</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, drv_enc28j60.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = encWriteBuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Send1Byte
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetSPI_Enable
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetSPI_Disable
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_ethernet
</UL>

<P><STRONG><a name="[60]"></a>encSetBank</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, drv_enc28j60.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = encSetBank &rArr; encWriteOp
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encWriteOp
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encInit
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encWrite
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encRead
</UL>

<P><STRONG><a name="[61]"></a>encRead</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, drv_enc28j60.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = encRead &rArr; encSetBank &rArr; encWriteOp
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encSetBank
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encReadOp
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_ethernet
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ethernet
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encInit
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encPhyWrite
</UL>

<P><STRONG><a name="[62]"></a>encWrite</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, drv_enc28j60.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = encWrite &rArr; encSetBank &rArr; encWriteOp
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encSetBank
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encWriteOp
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_ethernet
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ethernet
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encInit
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encPhyWrite
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nicSetMacAddress
</UL>

<P><STRONG><a name="[63]"></a>nicSetMacAddress</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, drv_enc28j60.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = nicSetMacAddress &rArr; encWrite &rArr; encSetBank &rArr; encWriteOp
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encInit
</UL>

<P><STRONG><a name="[64]"></a>encPhyWrite</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, drv_enc28j60.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = encPhyWrite &rArr; encWrite &rArr; encSetBank &rArr; encWriteOp
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encWrite
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encRead
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encInit
</UL>

<P><STRONG><a name="[65]"></a>encInit</STRONG> (Thumb, 240 bytes, Stack size 8 bytes, drv_enc28j60.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = encInit &rArr; encPhyWrite &rArr; encWrite &rArr; encSetBank &rArr; encWriteOp
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encPhyWrite
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nicSetMacAddress
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encWrite
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encRead
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encSetBank
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encWriteOp
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ethernet
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Network_Init
</UL>

<P><STRONG><a name="[67]"></a>get_ethernet</STRONG> (Thumb, 262 bytes, Stack size 16 bytes, drv_enc28j60.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = get_ethernet &rArr; encInit &rArr; encPhyWrite &rArr; encWrite &rArr; encSetBank &rArr; encWriteOp
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encInit
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encWrite
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encRead
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encReadBuffer
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encReadOp
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encWriteOp
</UL>
<BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread_UDP
</UL>

<P><STRONG><a name="[68]"></a>put_ethernet</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, drv_enc28j60.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = put_ethernet &rArr; encWrite &rArr; encSetBank &rArr; encWriteOp
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encWrite
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encRead
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encWriteBuffer
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encWriteOp
</UL>
<BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_net_process
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_transmit
</UL>

<P><STRONG><a name="[69]"></a>FLASH_SendByte</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, drv_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FLASH_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Send1Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_FastReadBuffer
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_BufferRead
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_PageWrite
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ChipErase
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_BlockErase
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_SectorErase
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WriteDisable
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WriteEnable
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForWriteEnd
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Init
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ReadID
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ReadByte
</UL>

<P><STRONG><a name="[6a]"></a>FLASH_ReadByte</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, drv_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_SendByte
</UL>

<P><STRONG><a name="[6b]"></a>FLASH_ReadID</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, drv_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = FLASH_ReadID &rArr; FLASH_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashSPI_Enable
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashSPI_Disable
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ID_Check
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Init
</UL>

<P><STRONG><a name="[6e]"></a>FLASH_Init</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, drv_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = FLASH_Init &rArr; FLASH_ReadID &rArr; FLASH_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashSPI_Enable
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashSPI_Disable
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ReadID
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
</UL>

<P><STRONG><a name="[260]"></a>FLASH_SendHalfWord</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, drv_flash.o(.text), UNUSED)

<P><STRONG><a name="[6f]"></a>FLASH_WaitForWriteEnd</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, drv_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = FLASH_WaitForWriteEnd &rArr; FLASH_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashSPI_Enable
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashSPI_Disable
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_PageWrite
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_BlockErase
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_SectorErase
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WriteDisable
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WriteEnable
</UL>

<P><STRONG><a name="[70]"></a>FLASH_WriteEnable</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, drv_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = FLASH_WriteEnable &rArr; FLASH_WaitForWriteEnd &rArr; FLASH_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashSPI_Enable
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashSPI_Disable
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForWriteEnd
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_PageWrite
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ChipErase
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_BlockErase
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_SectorErase
</UL>

<P><STRONG><a name="[71]"></a>FLASH_WriteDisable</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, drv_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashSPI_Enable
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashSPI_Disable
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForWriteEnd
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_SendByte
</UL>

<P><STRONG><a name="[72]"></a>FLASH_ID_Check</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, drv_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ReadID
</UL>

<P><STRONG><a name="[73]"></a>FLASH_SectorErase</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, drv_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = FLASH_SectorErase &rArr; FLASH_WriteEnable &rArr; FLASH_WaitForWriteEnd &rArr; FLASH_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashSPI_Enable
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashSPI_Disable
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WriteEnable
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForWriteEnd
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_AutoWriteBuffer
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreOpenBoxRecord
</UL>

<P><STRONG><a name="[74]"></a>FLASH_BlockErase</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, drv_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = FLASH_BlockErase &rArr; FLASH_WriteEnable &rArr; FLASH_WaitForWriteEnd &rArr; FLASH_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashSPI_Enable
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashSPI_Disable
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WriteEnable
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForWriteEnd
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_Record
</UL>

<P><STRONG><a name="[75]"></a>FLASH_ChipErase</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, drv_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = FLASH_ChipErase &rArr; FLASH_WriteEnable &rArr; FLASH_WaitForWriteEnd &rArr; FLASH_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashSPI_Enable
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashSPI_Disable
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WriteEnable
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysConfig_Init
</UL>

<P><STRONG><a name="[76]"></a>FLASH_PageWrite</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, drv_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = FLASH_PageWrite &rArr; FLASH_WriteEnable &rArr; FLASH_WaitForWriteEnd &rArr; FLASH_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashSPI_Enable
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashSPI_Disable
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WriteEnable
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForWriteEnd
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_BufferWrite
</UL>

<P><STRONG><a name="[77]"></a>FLASH_BufferWrite</STRONG> (Thumb, 286 bytes, Stack size 40 bytes, drv_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = FLASH_BufferWrite &rArr; FLASH_PageWrite &rArr; FLASH_WriteEnable &rArr; FLASH_WaitForWriteEnd &rArr; FLASH_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_PageWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_AutoWriteBuffer
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreOpenBoxRecord
</UL>

<P><STRONG><a name="[78]"></a>FLASH_BufferRead</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, drv_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashSPI_Enable
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashSPI_Disable
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_SendByte
</UL>

<P><STRONG><a name="[79]"></a>FLASH_FastReadBuffer</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, drv_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = FLASH_FastReadBuffer &rArr; FLASH_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashSPI_Enable
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashSPI_Disable
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_AutoWriteBuffer
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadOneRecord
</UL>

<P><STRONG><a name="[7a]"></a>FLASH_AutoWriteBuffer</STRONG> (Thumb, 196 bytes, Stack size 40 bytes, drv_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_FastReadBuffer
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_BufferWrite
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_SectorErase
</UL>

<P><STRONG><a name="[142]"></a>Keyboard_Init</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, drv_keyboard.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
</UL>

<P><STRONG><a name="[7b]"></a>Key_Scan</STRONG> (Thumb, 232 bytes, Stack size 8 bytes, drv_keyboard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Key_Scan &rArr; delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Get_KeyDown
</UL>

<P><STRONG><a name="[7c]"></a>Key_Get_KeyDown</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, drv_keyboard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Key_Get_KeyDown &rArr; Key_Scan &rArr; delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Scan
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyboardFunction
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clean_AllBox
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open_AllBox
</UL>

<P><STRONG><a name="[1e6]"></a>NumKeyToNumValue</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, drv_keyboard.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyboardFunction
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyChangeNumValue
</UL>

<P><STRONG><a name="[13c]"></a>LED_Init</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, drv_otherext.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
</UL>

<P><STRONG><a name="[13b]"></a>Beep_Init</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, drv_otherext.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
</UL>

<P><STRONG><a name="[141]"></a>ExtendFunction_Init</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, drv_otherext.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
</UL>

<P><STRONG><a name="[261]"></a>HexToBcd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, drv_rtc.o(.text), UNUSED)

<P><STRONG><a name="[262]"></a>BcdToHex</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, drv_rtc.o(.text), UNUSED)

<P><STRONG><a name="[ff]"></a>Chack_Date</STRONG> (Thumb, 172 bytes, Stack size 20 bytes, drv_rtc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Chack_Date
</UL>
<BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Set_Time
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRTCTime
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_DateTime
</UL>

<P><STRONG><a name="[100]"></a>Chack_Time</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, drv_rtc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Chack_Time
</UL>
<BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Set_Time
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRTCTime
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_DateTime
</UL>

<P><STRONG><a name="[101]"></a>Calc_Weekday</STRONG> (Thumb, 84 bytes, Stack size 20 bytes, drv_rtc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Calc_Weekday
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRTCTime
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_DateTime
</UL>

<P><STRONG><a name="[13e]"></a>RTC_Init</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, drv_rtc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
</UL>

<P><STRONG><a name="[fd]"></a>RTC_GetDateTime</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, drv_rtc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RTC_GetDateTime
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRTCTime
</UL>

<P><STRONG><a name="[102]"></a>RTC_SetDateTime</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, drv_rtc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Set_Time
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRTCTime
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_DateTime
</UL>

<P><STRONG><a name="[263]"></a>RTC_RAM_READ</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, drv_rtc.o(.text), UNUSED)

<P><STRONG><a name="[264]"></a>RTC_RAM_WRITE</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, drv_rtc.o(.text), UNUSED)

<P><STRONG><a name="[13d]"></a>SPI_Host_Init</STRONG> (Thumb, 130 bytes, Stack size 0 bytes, drv_spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
</UL>

<P><STRONG><a name="[5a]"></a>SPI_Send1Byte</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, drv_spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZiKu_GetChineseChar
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_SendByte
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encWriteBuffer
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encReadBuffer
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encReadOp
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encWriteOp
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM_SPI_TxdByte
</UL>

<P><STRONG><a name="[5d]"></a>SPI_Read1Byte</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, drv_spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZiKu_GetChineseChar
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encReadBuffer
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encReadOp
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM_SPI_RxdByte
</UL>

<P><STRONG><a name="[6c]"></a>FlashSPI_Enable</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, drv_spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_FastReadBuffer
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_BufferRead
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_PageWrite
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ChipErase
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_BlockErase
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_SectorErase
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WriteDisable
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WriteEnable
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForWriteEnd
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Init
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ReadID
</UL>

<P><STRONG><a name="[6d]"></a>FlashSPI_Disable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, drv_spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_FastReadBuffer
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_BufferRead
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_PageWrite
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ChipErase
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_BlockErase
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_SectorErase
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WriteDisable
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WriteEnable
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForWriteEnd
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Init
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ReadID
</UL>

<P><STRONG><a name="[c0]"></a>FM1702SPI_Enable</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, drv_spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM_Write_Reg
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM_Read_Reg
</UL>

<P><STRONG><a name="[c1]"></a>FM1702SPI_Disable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, drv_spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM_Write_Reg
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM_Read_Reg
</UL>

<P><STRONG><a name="[59]"></a>NetSPI_Enable</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, drv_spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encWriteBuffer
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encReadBuffer
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encReadOp
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encWriteOp
</UL>

<P><STRONG><a name="[5b]"></a>NetSPI_Disable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, drv_spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encWriteBuffer
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encReadBuffer
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encReadOp
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encWriteOp
</UL>

<P><STRONG><a name="[135]"></a>ZiKuSPI_Enable</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, drv_spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZiKu_GetChineseChar
</UL>

<P><STRONG><a name="[136]"></a>ZiKuNetSPI_Disable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, drv_spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZiKu_GetChineseChar
</UL>

<P><STRONG><a name="[7e]"></a>Time0_Init</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, drv_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Time0_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
</UL>

<P><STRONG><a name="[d]"></a>TIMER0_IRQHandler</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, drv_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIMER0_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[144]"></a>WDT_Init</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, drv_wdt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e9]"></a>WDT_Feed</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, drv_wdt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTakes_OnlineAsk
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTakesWriteCard
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTakesByCardID
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddOneValidCardNum
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckCardValid
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryBoxRecord
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Get_RecordAgain
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Get_Record
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Get_AllBoxUserCard
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LockersArg
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ID_REQUEST
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_AnyFingerOrCard
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_OnlineAsk
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_WriteCard
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_PreAuthorization
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_AnyCard
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Unlockin_Box
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lockin_Box
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clean_AllBox
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clr_AllValidCard
</UL>

<P><STRONG><a name="[81]"></a>LCD_WR_REG</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, drv_lcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPoint
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCursor
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayOff
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayOn
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAM_Prepare
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9486_ExitSleep_Code
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9486_EnterSleep_Code
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteReg
</UL>

<P><STRONG><a name="[82]"></a>LCD_WR_DATA</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, drv_lcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPoint
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCursor
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAM
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteReg
</UL>

<P><STRONG><a name="[80]"></a>LCD_WriteReg</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, drv_lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_DATA
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_REG
</UL>

<P><STRONG><a name="[265]"></a>LCD_ReadReg</STRONG> (Thumb, 152 bytes, Stack size 8 bytes, drv_lcd.o(.text), UNUSED)

<P><STRONG><a name="[83]"></a>LCD_Init</STRONG> (Thumb, 748 bytes, Stack size 8 bytes, drv_lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_Init &rArr; delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_DATA
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_REG
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
</UL>

<P><STRONG><a name="[84]"></a>ILI9486_EnterSleep_Code</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, drv_lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_REG
</UL>

<P><STRONG><a name="[85]"></a>ILI9486_ExitSleep_Code</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, drv_lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_REG
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>

<P><STRONG><a name="[86]"></a>LCD_WriteRAM_Prepare</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, drv_lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = LCD_WriteRAM_Prepare
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_REG
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowIcon
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowPartPic
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowFillPic
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fill
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
</UL>

<P><STRONG><a name="[87]"></a>LCD_WriteRAM</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, drv_lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_DATA
</UL>

<P><STRONG><a name="[88]"></a>LCD_DisplayOn</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, drv_lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_REG
</UL>

<P><STRONG><a name="[89]"></a>LCD_DisplayOff</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, drv_lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_REG
</UL>

<P><STRONG><a name="[8a]"></a>LCD_SetCursor</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, drv_lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_DATA
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_REG
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowIcon
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowPartPic
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowFillPic
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPoint
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fill
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
</UL>

<P><STRONG><a name="[8b]"></a>LCD_Clear</STRONG> (Thumb, 114 bytes, Stack size 12 bytes, drv_lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = LCD_Clear &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCursor
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAM_Prepare
</UL>
<BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Admin
</UL>

<P><STRONG><a name="[8c]"></a>LCD_Fill</STRONG> (Thumb, 158 bytes, Stack size 32 bytes, drv_lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = LCD_Fill &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCursor
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAM_Prepare
</UL>
<BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Admin
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_OnStandby
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EmptyBoxCount
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Time
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowIconMenu
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowListMenu
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PromptBigBox
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PromptBox
</UL>

<P><STRONG><a name="[8d]"></a>LCD_DrawPoint</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, drv_lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LCD_DrawPoint &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCursor
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_DATA
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_REG
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayASCII
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_Font
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Circle
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine
</UL>

<P><STRONG><a name="[8e]"></a>LCD_DrawLine</STRONG> (Thumb, 172 bytes, Stack size 68 bytes, drv_lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = LCD_DrawLine &rArr; LCD_DrawPoint &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawRectangle
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowListMenu
</UL>

<P><STRONG><a name="[8f]"></a>LCD_DrawRectangle</STRONG> (Thumb, 74 bytes, Stack size 28 bytes, drv_lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine
</UL>

<P><STRONG><a name="[90]"></a>Draw_Circle</STRONG> (Thumb, 198 bytes, Stack size 32 bytes, drv_lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPoint
</UL>

<P><STRONG><a name="[266]"></a>SET_FontColor</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, drv_lcd.o(.text), UNUSED)

<P><STRONG><a name="[267]"></a>SET_FontDistance</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, drv_lcd.o(.text), UNUSED)

<P><STRONG><a name="[91]"></a>Get_HzMat</STRONG> (Thumb, 410 bytes, Stack size 32 bytes, drv_lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZiKu_GetChineseChar
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayASCII
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_Font
</UL>

<P><STRONG><a name="[93]"></a>Show_Font</STRONG> (Thumb, 2662 bytes, Stack size 80 bytes, drv_lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_HzMat
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayString
</UL>

<P><STRONG><a name="[94]"></a>DisplayString</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, drv_lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_Font
</UL>
<BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStr
</UL>

<P><STRONG><a name="[95]"></a>DisplayASCII</STRONG> (Thumb, 908 bytes, Stack size 88 bytes, drv_lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_HzMat
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPoint
</UL>

<P><STRONG><a name="[268]"></a>PrtString</STRONG> (Thumb, 8 bytes, Stack size 12 bytes, drv_lcd.o(.text), UNUSED)

<P><STRONG><a name="[269]"></a>PrtASCII</STRONG> (Thumb, 8 bytes, Stack size 12 bytes, drv_lcd.o(.text), UNUSED)

<P><STRONG><a name="[96]"></a>LCD_ShowFillPic</STRONG> (Thumb, 164 bytes, Stack size 24 bytes, drv_lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LCD_ShowFillPic &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCursor
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAM_Prepare
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Admin
</UL>

<P><STRONG><a name="[98]"></a>LCD_ShowPartPic</STRONG> (Thumb, 346 bytes, Stack size 56 bytes, drv_lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = LCD_ShowPartPic &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCursor
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAM_Prepare
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Admin
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_OnStandby
</UL>

<P><STRONG><a name="[99]"></a>LCD_ShowIcon</STRONG> (Thumb, 820 bytes, Stack size 40 bytes, drv_lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LCD_ShowIcon &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCursor
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAM_Prepare
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UpdateDisplay
</UL>

<P><STRONG><a name="[a8]"></a>StoreFingerData</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, drv_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
</UL>

<P><STRONG><a name="[9b]"></a>Clean_RS485RxdBuf</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, drv_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Clean_RS485RxdBuf
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choice1BoxOpen_CheckResult
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanExtendBoxStatus
</UL>

<P><STRONG><a name="[9f]"></a>Store_Rs485Data</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, drv_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
</UL>

<P><STRONG><a name="[9e]"></a>RS485_Init</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, drv_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_Init
</UL>

<P><STRONG><a name="[9c]"></a>UART0_Init</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, drv_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART0_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
</UL>

<P><STRONG><a name="[11]"></a>UART0_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, drv_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = UART0_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_Rs485Data
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[26a]"></a>UART0_GetChar</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, drv_uart.o(.text), UNUSED)

<P><STRONG><a name="[a1]"></a>UART0_SendByte</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, drv_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_SendNxByte
</UL>

<P><STRONG><a name="[a0]"></a>UART0_SendNxByte</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, drv_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART0_SendNxByte
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCmdToExtendLockers
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_SendNxByte
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_SendStr
</UL>

<P><STRONG><a name="[a2]"></a>UART0_SendStr</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, drv_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UART0_SendStr &rArr; UART0_SendNxByte
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_SendNxByte
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSysConfig
</UL>

<P><STRONG><a name="[a4]"></a>RS485_SendNxByte</STRONG> (Thumb, 40 bytes, Stack size 12 bytes, drv_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_SendNxByte
</UL>

<P><STRONG><a name="[a5]"></a>UART1_Init</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, drv_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART1_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
</UL>

<P><STRONG><a name="[a7]"></a>UART1_SendByte</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, drv_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_SendNxByte
</UL>

<P><STRONG><a name="[a6]"></a>UART1_SendNxByte</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, drv_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART1_SendNxByte
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommDeal_Reply
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCmdToFingerprint
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendDataToFingerprint
</UL>

<P><STRONG><a name="[12]"></a>UART1_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, drv_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = UART1_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreFingerData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[a9]"></a>UART2_Init</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, drv_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART2_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
</UL>

<P><STRONG><a name="[13]"></a>UART2_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, drv_uart.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[ab]"></a>UART2_SendByte</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, drv_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_SendNxByte
</UL>

<P><STRONG><a name="[aa]"></a>UART2_SendNxByte</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, drv_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART2_SendNxByte
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommDeal_Reply
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendDataToVoice
</UL>

<P><STRONG><a name="[ac]"></a>UART3_Init</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, drv_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART3_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
</UL>

<P><STRONG><a name="[ae]"></a>UART3_SendByte</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, drv_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_SendNxByte
</UL>

<P><STRONG><a name="[ad]"></a>UART3_SendNxByte</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, drv_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART3_SendNxByte
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_ApplyFor
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommDeal_Reply
</UL>

<P><STRONG><a name="[14]"></a>UART3_IRQHandler</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, drv_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = UART3_IRQHandler &rArr; Comm_Decoding &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Decoding
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[b0]"></a>SendDataToVoice</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, drv_voice.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SendDataToVoice &rArr; UART2_SendNxByte
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_SendNxByte
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_Play
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_VoiceLevel
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_SendCmd
</UL>

<P><STRONG><a name="[b1]"></a>Voice_SendCmd</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, drv_voice.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Voice_SendCmd &rArr; SendDataToVoice &rArr; UART2_SendNxByte
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendDataToVoice
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_VoiceCmdTest
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_Init
</UL>

<P><STRONG><a name="[b2]"></a>Voice_Init</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, drv_voice.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Voice_Init &rArr; Voice_SendCmd &rArr; SendDataToVoice &rArr; UART2_SendNxByte
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_SendCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
</UL>

<P><STRONG><a name="[b3]"></a>Set_VoiceLevel</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, drv_voice.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Set_VoiceLevel &rArr; SendDataToVoice &rArr; UART2_SendNxByte
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendDataToVoice
</UL>
<BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_SetVoiceLevel
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b4]"></a>Voice_Play</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, drv_voice.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Voice_Play &rArr; SendDataToVoice &rArr; UART2_SendNxByte
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendDataToVoice
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_Login
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTakes_OnlineAsk
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTakesWriteCard
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTakesByCardID
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_PlayVoice
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lockers_TakeAwayByFinger
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoicePlay_xBoxOpen
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoicePlay_DoorNotClose
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fingerprint_Login
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_AnyFingerOrCard
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_AnyFinger
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_OnlineAsk
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_WriteCard
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_PreAuthorization
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_AnyCard
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TopAdmin_Login
</UL>

<P><STRONG><a name="[b5]"></a>Wait_VoiceModule_Free</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, drv_voice.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>

<P><STRONG><a name="[b7]"></a>HC_delay_us</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, drv_74hc16x.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HC_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBoxInsideStatus
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBoxDoorStatus
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenOneBox
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseAllBox
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ManualOpen1Box
</UL>

<P><STRONG><a name="[13f]"></a>Drv_74HC164_Init</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, drv_74hc16x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
</UL>

<P><STRONG><a name="[140]"></a>Drv_74HC165_Init</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, drv_74hc16x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
</UL>

<P><STRONG><a name="[b6]"></a>ManualOpen1Box</STRONG> (Thumb, 78 bytes, Stack size 12 bytes, drv_74hc16x.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_delay_us
</UL>

<P><STRONG><a name="[b8]"></a>CloseAllBox</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, drv_74hc16x.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = CloseAllBox &rArr; HC_delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenOneBox
</UL>

<P><STRONG><a name="[b9]"></a>OpenOneBox</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, drv_74hc16x.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = OpenOneBox &rArr; CloseAllBox &rArr; HC_delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseAllBox
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choice1BoxOpen_CheckResult
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choice1BoxOpen
</UL>

<P><STRONG><a name="[ba]"></a>GetBoxDoorStatus</STRONG> (Thumb, 220 bytes, Stack size 28 bytes, drv_74hc16x.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GetBoxDoorStatus &rArr; HC_delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choice1BoxOpen_CheckResult
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanLocalBoxStatus
</UL>

<P><STRONG><a name="[bb]"></a>GetBoxInsideStatus</STRONG> (Thumb, 220 bytes, Stack size 28 bytes, drv_74hc16x.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_delay_us
</UL>

<P><STRONG><a name="[c2]"></a>FM_Delay_us</STRONG> (Thumb, 40 bytes, Stack size 12 bytes, drv_rfm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = FM_Delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM_Write_Reg
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM_Read_Reg
</UL>

<P><STRONG><a name="[bc]"></a>FM_Delay_ms</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, drv_rfm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = FM_Delay_ms &rArr; delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_WriteCard
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_Init
</UL>

<P><STRONG><a name="[bd]"></a>FM_SPI_TxdByte</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, drv_rfm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FM_SPI_TxdByte
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Send1Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM_Write_Reg
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM_Read_Reg
</UL>

<P><STRONG><a name="[be]"></a>FM_SPI_RxdByte</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, drv_rfm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FM_SPI_RxdByte
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Read1Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM_Read_Reg
</UL>

<P><STRONG><a name="[bf]"></a>FM_Read_Reg</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, drv_rfm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = FM_Read_Reg &rArr; FM_Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM1702SPI_Disable
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM1702SPI_Enable
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM_SPI_RxdByte
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM_SPI_TxdByte
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM_Delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Transfer
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Restore
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Decrement
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Increment
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Halt
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Write
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Read
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Authentication
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Load_Key
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Select
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_AntiColl
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Request
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Send
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_FIFO
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_FIFO
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_Init
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM1702SL_Config
</UL>

<P><STRONG><a name="[c3]"></a>FM_Write_Reg</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, drv_rfm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = FM_Write_Reg &rArr; FM_Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM1702SPI_Disable
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM1702SPI_Enable
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM_SPI_TxdByte
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM_Delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Transfer
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Restore
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Decrement
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Increment
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Halt
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Write
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Read
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Authentication
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Select
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_AntiColl
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_BitFraming
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Request
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Send
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_FIFO
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_FIFO
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM1702SL_Config
</UL>

<P><STRONG><a name="[c4]"></a>FM1702SL_Config</STRONG> (Thumb, 120 bytes, Stack size 8 bytes, drv_rfm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = FM1702SL_Config &rArr; FM_Write_Reg &rArr; FM_Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM_Write_Reg
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM_Read_Reg
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_Init
</UL>

<P><STRONG><a name="[c5]"></a>RF_Init</STRONG> (Thumb, 118 bytes, Stack size 8 bytes, drv_rfm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = RF_Init &rArr; FM1702SL_Config &rArr; FM_Write_Reg &rArr; FM_Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM1702SL_Config
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM_Read_Reg
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM_Delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
</UL>

<P><STRONG><a name="[c6]"></a>Clear_FIFO</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, drv_rfm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = Clear_FIFO &rArr; FM_Write_Reg &rArr; FM_Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM_Write_Reg
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM_Read_Reg
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Send
</UL>

<P><STRONG><a name="[c7]"></a>Write_FIFO</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, drv_rfm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = Write_FIFO &rArr; FM_Write_Reg &rArr; FM_Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM_Write_Reg
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Send
</UL>

<P><STRONG><a name="[c8]"></a>Read_FIFO</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, drv_rfm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = Read_FIFO &rArr; FM_Read_Reg &rArr; FM_Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM_Read_Reg
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Transfer
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Restore
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Decrement
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Increment
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Write
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Read
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Select
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_AntiColl
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Request
</UL>

<P><STRONG><a name="[cb]"></a>Judge_Req</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, drv_rfm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Request
</UL>

<P><STRONG><a name="[c9]"></a>Command_Send</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, drv_rfm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = Command_Send &rArr; Write_FIFO &rArr; FM_Write_Reg &rArr; FM_Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_FIFO
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_FIFO
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM_Write_Reg
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM_Read_Reg
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Transfer
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Restore
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Decrement
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Increment
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Halt
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Write
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Read
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Authentication
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Load_Key
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Select
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_AntiColl
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Request
</UL>

<P><STRONG><a name="[ca]"></a>MIF_Request</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, drv_rfm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = MIF_Request &rArr; Command_Send &rArr; Write_FIFO &rArr; FM_Write_Reg &rArr; FM_Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Send
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Judge_Req
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_FIFO
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM_Write_Reg
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM_Read_Reg
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_WriteCard
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_ReadCard
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_WriteCard_1Block
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_ReadCard_1Block
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_GetCardUID
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_Read_CardUID
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_Find_Card
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_ActiveCard
</UL>

<P><STRONG><a name="[cf]"></a>Check_UID</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, drv_rfm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_AntiColl
</UL>

<P><STRONG><a name="[ce]"></a>Save_UID</STRONG> (Thumb, 190 bytes, Stack size 20 bytes, drv_rfm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Save_UID
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_AntiColl
</UL>

<P><STRONG><a name="[cc]"></a>Set_BitFraming</STRONG> (Thumb, 250 bytes, Stack size 16 bytes, drv_rfm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = Set_BitFraming &rArr; FM_Write_Reg &rArr; FM_Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM_Write_Reg
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_AntiColl
</UL>

<P><STRONG><a name="[cd]"></a>MIF_AntiColl</STRONG> (Thumb, 252 bytes, Stack size 24 bytes, drv_rfm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = MIF_AntiColl &rArr; Command_Send &rArr; Write_FIFO &rArr; FM_Write_Reg &rArr; FM_Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_BitFraming
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_UID
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_UID
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Send
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_FIFO
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM_Write_Reg
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM_Read_Reg
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_WriteCard
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_ReadCard
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_WriteCard_1Block
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_ReadCard_1Block
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_GetCardUID
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_Read_CardUID
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_ActiveCard
</UL>

<P><STRONG><a name="[d0]"></a>MIF_Select</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, drv_rfm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = MIF_Select &rArr; Command_Send &rArr; Write_FIFO &rArr; FM_Write_Reg &rArr; FM_Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Send
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_FIFO
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM_Write_Reg
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM_Read_Reg
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_WriteCard
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_ReadCard
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_WriteCard_1Block
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_ReadCard_1Block
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_ActiveCard
</UL>

<P><STRONG><a name="[d2]"></a>MIF_ChgAvailableKey</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, drv_rfm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = MIF_ChgAvailableKey
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Load_Key
</UL>

<P><STRONG><a name="[d1]"></a>MIF_Load_Key</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, drv_rfm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = MIF_Load_Key &rArr; Command_Send &rArr; Write_FIFO &rArr; FM_Write_Reg &rArr; FM_Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_ChgAvailableKey
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Send
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM_Read_Reg
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_WriteCard
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_ReadCard
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_WriteCard_1Block
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_ReadCard_1Block
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_ActiveCard
</UL>

<P><STRONG><a name="[d3]"></a>MIF_Authentication</STRONG> (Thumb, 254 bytes, Stack size 32 bytes, drv_rfm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = MIF_Authentication &rArr; Command_Send &rArr; Write_FIFO &rArr; FM_Write_Reg &rArr; FM_Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Send
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM_Write_Reg
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM_Read_Reg
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_WriteCard
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_ReadCard
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_WriteCard_1Block
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_ReadCard_1Block
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_ActiveCard
</UL>

<P><STRONG><a name="[d4]"></a>MIF_Read</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, drv_rfm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = MIF_Read &rArr; Command_Send &rArr; Write_FIFO &rArr; FM_Write_Reg &rArr; FM_Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Send
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_FIFO
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM_Write_Reg
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM_Read_Reg
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_ReadCard
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_ReadCard_1Block
</UL>

<P><STRONG><a name="[d5]"></a>MIF_Write</STRONG> (Thumb, 210 bytes, Stack size 32 bytes, drv_rfm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = MIF_Write &rArr; Command_Send &rArr; Write_FIFO &rArr; FM_Write_Reg &rArr; FM_Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Send
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_FIFO
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM_Write_Reg
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM_Read_Reg
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_WriteCard
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_WriteCard_1Block
</UL>

<P><STRONG><a name="[d6]"></a>MIF_Halt</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, drv_rfm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = MIF_Halt &rArr; Command_Send &rArr; Write_FIFO &rArr; FM_Write_Reg &rArr; FM_Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Send
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM_Write_Reg
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM_Read_Reg
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_WriteCard
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_ReadCard
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_WriteCard_1Block
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_ReadCard_1Block
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_GetCardUID
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_Read_CardUID
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_Find_Card
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_ActiveCard
</UL>

<P><STRONG><a name="[d7]"></a>MIF_Increment</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, drv_rfm.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Send
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_FIFO
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM_Write_Reg
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM_Read_Reg
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_BlockValueIncrement
</UL>

<P><STRONG><a name="[d8]"></a>MIF_Decrement</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, drv_rfm.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Send
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_FIFO
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM_Write_Reg
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM_Read_Reg
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_BlockValueDecrement
</UL>

<P><STRONG><a name="[d9]"></a>MIF_Restore</STRONG> (Thumb, 166 bytes, Stack size 16 bytes, drv_rfm.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Send
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_FIFO
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM_Write_Reg
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM_Read_Reg
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_BlockRestore
</UL>

<P><STRONG><a name="[da]"></a>MIF_Transfer</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, drv_rfm.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Send
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_FIFO
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM_Write_Reg
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM_Read_Reg
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_BlockValueDecrement
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_BlockValueIncrement
</UL>

<P><STRONG><a name="[db]"></a>RF_ActiveCard</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, drv_rfm.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Halt
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Authentication
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Load_Key
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Select
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_AntiColl
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Request
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_BlockRestore
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_BlockValueDecrement
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_BlockValueIncrement
</UL>

<P><STRONG><a name="[dd]"></a>RF_Find_Card</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, drv_rfm.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Halt
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Request
</UL>

<P><STRONG><a name="[de]"></a>RF_Read_CardUID</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, drv_rfm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = RF_Read_CardUID &rArr; MIF_AntiColl &rArr; Command_Send &rArr; Write_FIFO &rArr; FM_Write_Reg &rArr; FM_Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Halt
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_AntiColl
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Request
</UL>
<BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_FindCard
</UL>

<P><STRONG><a name="[df]"></a>RF_GetCardUID</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, drv_rfm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = RF_GetCardUID &rArr; MIF_AntiColl &rArr; Command_Send &rArr; Write_FIFO &rArr; FM_Write_Reg &rArr; FM_Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Halt
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_AntiColl
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Request
</UL>
<BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_IC_ID_CardSN
</UL>

<P><STRONG><a name="[e0]"></a>RF_ReadCard_1Block</STRONG> (Thumb, 152 bytes, Stack size 32 bytes, drv_rfm.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Halt
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Read
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Authentication
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Load_Key
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Select
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_AntiColl
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Request
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>

<P><STRONG><a name="[e1]"></a>RF_WriteCard_1Block</STRONG> (Thumb, 146 bytes, Stack size 32 bytes, drv_rfm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = RF_WriteCard_1Block &rArr; MIF_Write &rArr; Command_Send &rArr; Write_FIFO &rArr; FM_Write_Reg &rArr; FM_Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Halt
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Write
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Authentication
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Load_Key
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Select
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_AntiColl
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Request
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTakesWriteCard
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArgCardOperation
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_WriteCard
</UL>

<P><STRONG><a name="[e2]"></a>RF_ReadCard</STRONG> (Thumb, 182 bytes, Stack size 40 bytes, drv_rfm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 148 + Unknown Stack Size
<LI>Call Chain = RF_ReadCard &rArr; MIF_Authentication &rArr; Command_Send &rArr; Write_FIFO &rArr; FM_Write_Reg &rArr; FM_Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Halt
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Read
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Authentication
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Load_Key
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Select
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_AntiColl
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Request
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTakesWriteCard
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArgCardOperation
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SuperCard_SetAdmin
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_WriteCard
</UL>

<P><STRONG><a name="[e3]"></a>RF_WriteCard</STRONG> (Thumb, 184 bytes, Stack size 32 bytes, drv_rfm.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Halt
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Write
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Authentication
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Load_Key
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Select
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_AntiColl
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Request
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM_Delay_ms
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>

<P><STRONG><a name="[e4]"></a>RF_BlockValueIncrement</STRONG> (Thumb, 100 bytes, Stack size 40 bytes, drv_rfm.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_ActiveCard
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Transfer
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Increment
</UL>

<P><STRONG><a name="[e5]"></a>RF_BlockValueDecrement</STRONG> (Thumb, 100 bytes, Stack size 40 bytes, drv_rfm.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_ActiveCard
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Transfer
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Decrement
</UL>

<P><STRONG><a name="[e6]"></a>RF_BlockRestore</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, drv_rfm.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_ActiveCard
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIF_Restore
</UL>

<P><STRONG><a name="[e7]"></a>Wiegand_Init</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, drv_wiegand.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Wiegand_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ea]"></a>L_MOVE</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, drv_wiegand.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ID_REQUEST
</UL>

<P><STRONG><a name="[eb]"></a>R_MOVE</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, drv_wiegand.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ID_REQUEST
</UL>

<P><STRONG><a name="[e8]"></a>ID_REQUEST</STRONG> (Thumb, 840 bytes, Stack size 16 bytes, drv_wiegand.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ID_REQUEST
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Feed
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;R_MOVE
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L_MOVE
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EINT3_IRQHandler
</UL>

<P><STRONG><a name="[21]"></a>EINT3_IRQHandler</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, drv_wiegand.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = EINT3_IRQHandler &rArr; ID_REQUEST
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ID_REQUEST
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[17e]"></a>Wiegand_ReardCardID</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, drv_wiegand.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_IC_ID_CardSN
</UL>

<P><STRONG><a name="[187]"></a>UInt_To_Ascii</STRONG> (Thumb, 70 bytes, Stack size 32 bytes, lib_public.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UInt_To_Ascii
</UL>
<BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArgCardOperation
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyInputIpAddr
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AskUnlockinBox
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AskLockinBox
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddCard2Box
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddValidCard
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InputServerPort
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InputMachineNum
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AdminSetBoxNum
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InputBoxID
</UL>

<P><STRONG><a name="[ec]"></a>AsciiStr_To_UInt</STRONG> (Thumb, 138 bytes, Stack size 48 bytes, lib_public.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = AsciiStr_To_UInt &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArgCardOperation
</UL>

<P><STRONG><a name="[26b]"></a>Bcd_To_Hex</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, lib_public.o(.text), UNUSED)

<P><STRONG><a name="[26c]"></a>Hex_To_Bcd</STRONG> (Thumb, 48 bytes, Stack size 20 bytes, lib_public.o(.text), UNUSED)

<P><STRONG><a name="[26d]"></a>Hex_To_Ascii</STRONG> (Thumb, 80 bytes, Stack size 20 bytes, lib_public.o(.text), UNUSED)

<P><STRONG><a name="[fa]"></a>Ascii_To_Hex</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, lib_public.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Ascii_To_Hex
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckRegistrationCode
</UL>

<P><STRONG><a name="[26e]"></a>Bcd_To_Ascii</STRONG> (Thumb, 52 bytes, Stack size 20 bytes, lib_public.o(.text), UNUSED)

<P><STRONG><a name="[26f]"></a>Find_CharAddr</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, lib_public.o(.text), UNUSED)

<P><STRONG><a name="[ee]"></a>Str_Sample</STRONG> (Thumb, 124 bytes, Stack size 48 bytes, lib_public.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>

<P><STRONG><a name="[270]"></a>IPinfo_Valid</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lib_public.o(.text), UNUSED)

<P><STRONG><a name="[271]"></a>IPinfo_Ascii2Hex</STRONG> (Thumb, 154 bytes, Stack size 24 bytes, lib_public.o(.text), UNUSED)

<P><STRONG><a name="[1c1]"></a>IPinfo_Hex2Ascii</STRONG> (Thumb, 192 bytes, Stack size 20 bytes, lib_public.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = IPinfo_Hex2Ascii
</UL>
<BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InputIp
</UL>

<P><STRONG><a name="[272]"></a>U32ArraySort</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, lib_public.o(.text), UNUSED)

<P><STRONG><a name="[f0]"></a>SysTick_CounterCmd</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, mid_systick.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Stop
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Disable
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Enable
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Init
</UL>

<P><STRONG><a name="[ef]"></a>SysTick_Init</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, mid_systick.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SysTick_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_CounterCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
</UL>

<P><STRONG><a name="[f1]"></a>SysTick_Enable</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, mid_systick.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SysTick_Enable
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_CounterCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerSet
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerCreate
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerDelete
</UL>

<P><STRONG><a name="[f2]"></a>SysTick_Disable</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, mid_systick.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SysTick_Disable
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_CounterCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerSet
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerCreate
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerDelete
</UL>

<P><STRONG><a name="[f3]"></a>SysTick_Stop</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, mid_systick.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_CounterCmd
</UL>

<P><STRONG><a name="[f4]"></a>TimerDelete</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, mid_systick.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TimerDelete &rArr; SysTick_Disable
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Disable
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerCallback
</UL>

<P><STRONG><a name="[f5]"></a>TimerCallback</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, mid_systick.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TimerCallback &rArr; TimerDelete &rArr; SysTick_Disable
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerDelete
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[b]"></a>SysTick_Handler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, mid_systick.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SysTick_Handler &rArr; TimerCallback &rArr; TimerDelete &rArr; SysTick_Disable
</UL>
<BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[139]"></a>SysTimerInit</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, mid_systick.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
</UL>

<P><STRONG><a name="[f6]"></a>TimerCreate</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, mid_systick.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = TimerCreate &rArr; SysTick_Disable
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Disable
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
</UL>

<P><STRONG><a name="[f7]"></a>TimerSet</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, mid_systick.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Disable
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Enable
</UL>

<P><STRONG><a name="[124]"></a>SetLedBlink</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, mid_magically.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread_CommHandle
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SlavePacketDecoding
</UL>

<P><STRONG><a name="[35]"></a>SignalLedBlink</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, mid_magically.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> app_main.o(.text)
</UL>
<P><STRONG><a name="[f8]"></a>Beep</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, mid_magically.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Beep
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_Login
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTakes_OnlineAsk
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTakesWriteCard
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTakesByCardID
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArgCardOperation
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SuperCard_SetAdmin
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreOpenBoxRecord
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lockers_TakeAwayByFinger
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleTimeoutAlert
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSysConfig
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_LockersArg
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_NetworkArg
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_HardwareArg
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysConfig_Init
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_AnyFingerOrCard
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_AnyFinger
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_OnlineAsk
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_WriteCard
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_PreAuthorization
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_AnyCard
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TopAdmin_Login
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Unlockin_Box
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lockin_Box
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open_AllBox
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_ValidCard
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_AddAdminCard
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Registration
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_TcpIpInfo
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_DateTime
</UL>

<P><STRONG><a name="[34]"></a>BeepCallback</STRONG> (Thumb, 136 bytes, Stack size 0 bytes, mid_magically.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> app_main.o(.text)
</UL>
<P><STRONG><a name="[7d]"></a>Buzzer</STRONG> (Thumb, 22 bytes, Stack size 12 bytes, mid_magically.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Buzzer &rArr; Beep
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Get_KeyDown
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_Login
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTakes_OnlineAsk
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTakesWriteCard
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTakesByCardID
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArgCardOperation
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SuperCard_SetAdmin
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_FindCard
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_RingBuzzer
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lockers_TakeAwayByFinger
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSysConfig
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysConfig_Init
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_AnyFingerOrCard
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_OnlineAsk
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_WriteCard
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_PreAuthorization
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_AnyCard
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TopAdmin_Login
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TopAdmin_SetPassword
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Unlockin_Box
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lockin_Box
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clean_AllBox
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clean_OneBox
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clr_AllValidCard
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_ValidCard
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_HandleTimeout
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PickUpAwaitTime
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PickUpTimeout
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_AllowOpenBoxNum
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_CardSector
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_LockersValidityDate
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_WorkMode
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_IDCardSwitch
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_BoxDoorStatusCheck
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_DebugMode
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_DeleteAdminCard
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_AddAdminCard
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_ClientIdCode
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_LockersName
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_AdminPassword
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Registration
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_TcpIpInfo
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_NetSwitch
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_MachineNum
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_VoiceModuleLevel
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_DateTime
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_BoxNum
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_KeyboardType
</UL>

<P><STRONG><a name="[36]"></a>Tick_ReadRTC</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, mid_magically.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> app_main.o(.text)
</UL>
<P><STRONG><a name="[f9]"></a>CheckRegistrationCode</STRONG> (Thumb, 266 bytes, Stack size 48 bytes, mid_magically.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = CheckRegistrationCode &rArr; Store_Parameters &rArr; I2C_EE_BufferWrite &rArr; I2C_EE_PageWrite &rArr; EP_WriteByte &rArr; EP_Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_Parameters
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ascii_To_Hex
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Registration
</UL>

<P><STRONG><a name="[13a]"></a>GPIO_ConfigInit</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, mid_sysconfig.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
</UL>

<P><STRONG><a name="[273]"></a>Get_MCU_ID</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, mid_sysconfig.o(.text), UNUSED)

<P><STRONG><a name="[11b]"></a>Calc_CRC</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, mid_sysconfig.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Calc_CRC
</UL>
<BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTakesWriteCard
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SlavePacketDecoding
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCmdToExtendLockers
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_ApplyFor
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommDeal_Reply
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_PacketValidityCheck
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_WriteCard
</UL>

<P><STRONG><a name="[274]"></a>delay_us</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, mid_sysconfig.o(.text), UNUSED)

<P><STRONG><a name="[66]"></a>delay_ms</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, mid_sysconfig.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Feed
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9486_ExitSleep_Code
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Scan
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encInit
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_Login
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTakes_OnlineAsk
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTakesWriteCard
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTakesByCardID
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArgCardOperation
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddOneValidCardNum
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreOpenBoxRecord
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_Record
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_RestSys
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lockers_TakeAwayByFinger
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DepositKeyDown
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choice1BoxOpen_CheckResult
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choice1BoxOpen
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCmdToExtendLockers
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommDeal_Reply
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSysConfig
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM_Delay_ms
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenOneBox
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait_VoiceModule_Free
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fingerprint_GetChar
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AwaitingerprintResult
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fingerprint_Login
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_AnyFingerOrCard
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_AnyFinger
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_WriteCard
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_PreAuthorization
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TopAdmin_Login
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TopAdmin_SetPassword
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Unlockin_Box
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lockin_Box
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clean_AllBox
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clean_OneBox
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open_AllBox
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open_OneBox
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clr_AllValidCard
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_ValidCard
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_HandleTimeout
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PickUpAwaitTime
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PickUpTimeout
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_AllowOpenBoxNum
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_CardSector
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_LockersValidityDate
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_WorkMode
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_IDCardSwitch
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_BoxDoorStatusCheck
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_DebugMode
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_DeleteAdminCard
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_ClientIdCode
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_LockersName
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_AdminPassword
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Registration
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_TcpIpInfo
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_NetSwitch
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_MachineNum
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_VoiceModuleLevel
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_DateTime
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_BoxNum
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SysConfigInit
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_KeyboardType
</UL>

<P><STRONG><a name="[32]"></a>TimingDelay_Decrement</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, mid_sysconfig.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> app_main.o(.text)
</UL>
<P><STRONG><a name="[33]"></a>TimeCount</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mid_sysconfig.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> app_main.o(.text)
</UL>
<P><STRONG><a name="[fe]"></a>CheckSysValidityDate</STRONG> (Thumb, 158 bytes, Stack size 12 bytes, mid_sysconfig.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = CheckSysValidityDate
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRTCTime
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Registration
</UL>

<P><STRONG><a name="[fc]"></a>GetRTCTime</STRONG> (Thumb, 260 bytes, Stack size 8 bytes, mid_sysconfig.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = GetRTCTime &rArr; Calc_Weekday
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDateTime
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetDateTime
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Calc_Weekday
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chack_Time
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chack_Date
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSysValidityDate
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[fb]"></a>Store_Parameters</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, mid_sysconfig.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Store_Parameters &rArr; I2C_EE_BufferWrite &rArr; I2C_EE_PageWrite &rArr; EP_WriteByte &rArr; EP_Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EE_BufferWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoSave_ServerMAC
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoSave_ServerAddr
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTakes_OnlineAsk
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTakesWriteCard
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTakesByCardID
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArgCardOperation
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SuperCard_SetAdmin
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddOneValidCardNum
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreOpenBoxRecord
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_Record
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Get_Record
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_UnlockNxBox
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_LockNxBox
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Set_BoxUserCard
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_SetBoxInfo
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_SetBoxNum
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Set_Lockers
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_SetVoiceLevel
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Set_CardKey
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Set_ServerIP
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Set_IP
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Set_NetworkSwitch
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Set_MachineNum
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lockers_TakeAwayByFinger
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysConfig_Init
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_CardKey
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LockersArg
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_NetworkArg
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_HardwareArg
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckRegistrationCode
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_AnyFingerOrCard
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_AnyFinger
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_OnlineAsk
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_WriteCard
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_PreAuthorization
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_AnyCard
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TopAdmin_SetPassword
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Unlockin_Box
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lockin_Box
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clean_AllBox
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clean_OneBox
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clr_AllValidCard
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_HandleTimeout
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PickUpAwaitTime
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PickUpTimeout
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_AllowOpenBoxNum
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_CardSector
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_LockersValidityDate
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_WorkMode
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_IDCardSwitch
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_BoxDoorStatusCheck
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_DebugMode
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_DeleteAdminCard
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_AddAdminCard
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_ClientIdCode
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_LockersName
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_AdminPassword
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_TcpIpInfo
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_NetSwitch
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_MachineNum
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_VoiceModuleLevel
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_BoxNum
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_KeyboardType
</UL>

<P><STRONG><a name="[103]"></a>Write_Parameters</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, mid_sysconfig.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Write_Parameters &rArr; I2C_EE_BufferWrite &rArr; I2C_EE_PageWrite &rArr; EP_WriteByte &rArr; EP_Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EE_BufferWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_LockersArg
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_NetworkArg
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_HardwareArg
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysConfig_Init
</UL>

<P><STRONG><a name="[104]"></a>Read_Parameters</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, mid_sysconfig.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Read_Parameters &rArr; I2C_EE_BufferRead &rArr; EP_ReadByte &rArr; EP_Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EE_BufferRead
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSysConfig
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_RecordPoint
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_ClientInfo
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_CardKey
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_LockersArg
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_NetworkArg
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_HardwareArg
</UL>

<P><STRONG><a name="[105]"></a>Init_HardwareArg</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, mid_sysconfig.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = Init_HardwareArg &rArr; Store_Parameters &rArr; I2C_EE_BufferWrite &rArr; I2C_EE_PageWrite &rArr; EP_WriteByte &rArr; EP_Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_Parameters
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_HardwareArg
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysConfig_Init
</UL>

<P><STRONG><a name="[106]"></a>Init_NetworkArg</STRONG> (Thumb, 162 bytes, Stack size 8 bytes, mid_sysconfig.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = Init_NetworkArg &rArr; Store_Parameters &rArr; I2C_EE_BufferWrite &rArr; I2C_EE_PageWrite &rArr; EP_WriteByte &rArr; EP_Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateSysMAC
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_Parameters
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_NetworkArg
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysConfig_Init
</UL>

<P><STRONG><a name="[108]"></a>Init_LockersArg</STRONG> (Thumb, 334 bytes, Stack size 16 bytes, mid_sysconfig.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = Init_LockersArg &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Feed
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_Parameters
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_LockersArg
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysConfig_Init
</UL>

<P><STRONG><a name="[10a]"></a>Init_CardKey</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, mid_sysconfig.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = Init_CardKey &rArr; Store_Parameters &rArr; I2C_EE_BufferWrite &rArr; I2C_EE_PageWrite &rArr; EP_WriteByte &rArr; EP_Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_Parameters
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysConfig_Init
</UL>

<P><STRONG><a name="[10b]"></a>SysConfig_Init</STRONG> (Thumb, 208 bytes, Stack size 272 bytes, mid_sysconfig.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424 + Unknown Stack Size
<LI>Call Chain = SysConfig_Init &rArr; Init_LockersArg &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ChipErase
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_CardKey
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LockersArg
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_NetworkArg
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_HardwareArg
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Parameters
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_Parameters
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_SysInit
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSysConfig
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SysConfigInit
</UL>

<P><STRONG><a name="[10e]"></a>Chcek_HardwareArg</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, mid_sysconfig.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_HardwareArg
</UL>

<P><STRONG><a name="[111]"></a>Chcek_NetworkArg</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, mid_sysconfig.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_NetworkArg
</UL>

<P><STRONG><a name="[113]"></a>Chcek_LockersArg</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, mid_sysconfig.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_LockersArg
</UL>

<P><STRONG><a name="[10d]"></a>Get_HardwareArg</STRONG> (Thumb, 194 bytes, Stack size 48 bytes, mid_sysconfig.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = Get_HardwareArg &rArr; Init_HardwareArg &rArr; Store_Parameters &rArr; I2C_EE_BufferWrite &rArr; I2C_EE_PageWrite &rArr; EP_WriteByte &rArr; EP_Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chcek_HardwareArg
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_HardwareArg
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Parameters
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Parameters
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSysConfig
</UL>

<P><STRONG><a name="[110]"></a>Get_NetworkArg</STRONG> (Thumb, 246 bytes, Stack size 64 bytes, mid_sysconfig.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = Get_NetworkArg &rArr; Init_NetworkArg &rArr; Store_Parameters &rArr; I2C_EE_BufferWrite &rArr; I2C_EE_PageWrite &rArr; EP_WriteByte &rArr; EP_Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chcek_NetworkArg
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_NetworkArg
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Parameters
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Parameters
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSysConfig
</UL>

<P><STRONG><a name="[112]"></a>Get_LockersArg</STRONG> (Thumb, 240 bytes, Stack size 120 bytes, mid_sysconfig.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272 + Unknown Stack Size
<LI>Call Chain = Get_LockersArg &rArr; Init_LockersArg &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chcek_LockersArg
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LockersArg
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Parameters
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Parameters
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSysConfig
</UL>

<P><STRONG><a name="[114]"></a>Get_CardKey</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, mid_sysconfig.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Get_CardKey &rArr; Read_Parameters &rArr; I2C_EE_BufferRead &rArr; EP_ReadByte &rArr; EP_Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Parameters
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSysConfig
</UL>

<P><STRONG><a name="[115]"></a>Get_ClientInfo</STRONG> (Thumb, 82 bytes, Stack size 48 bytes, mid_sysconfig.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Get_ClientInfo &rArr; Read_Parameters &rArr; I2C_EE_BufferRead &rArr; EP_ReadByte &rArr; EP_Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Parameters
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSysConfig
</UL>

<P><STRONG><a name="[116]"></a>Get_RecordPoint</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, mid_sysconfig.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Get_RecordPoint &rArr; Read_Parameters &rArr; I2C_EE_BufferRead &rArr; EP_ReadByte &rArr; EP_Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Parameters
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSysConfig
</UL>

<P><STRONG><a name="[117]"></a>ReadSysConfig</STRONG> (Thumb, 174 bytes, Stack size 208 bytes, mid_sysconfig.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 632 + Unknown Stack Size
<LI>Call Chain = ReadSysConfig &rArr; SysConfig_Init &rArr; Init_LockersArg &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowNotice
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_RecordPoint
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_ClientInfo
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_CardKey
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_LockersArg
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_NetworkArg
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_HardwareArg
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysConfig_Init
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Parameters
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_SendStr
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[11e]"></a>CmdData_Encrypt</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, mid_comm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_ApplyFor
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommDeal_Reply
</UL>

<P><STRONG><a name="[119]"></a>CmdData_Decoding</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, mid_comm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Decoding
</UL>

<P><STRONG><a name="[af]"></a>Comm_Decoding</STRONG> (Thumb, 692 bytes, Stack size 8 bytes, mid_comm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Comm_Decoding &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdData_Decoding
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_IRQHandler
</UL>

<P><STRONG><a name="[11a]"></a>Comm_PacketValidityCheck</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, mid_comm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Comm_PacketValidityCheck &rArr; Calc_CRC
</UL>
<BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Calc_CRC
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_PacketDeal
</UL>

<P><STRONG><a name="[11c]"></a>Comm_PacketDeal</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, mid_comm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Comm_PacketDeal &rArr; Comm_PacketValidityCheck &rArr; Calc_CRC
</UL>
<BR>[Calls]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_PacketValidityCheck
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread_UDP
</UL>

<P><STRONG><a name="[11d]"></a>CommDeal_Reply</STRONG> (Thumb, 400 bytes, Stack size 24 bytes, mid_comm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = CommDeal_Reply &rArr; UdpServer_SendData &rArr; udp_transmit &rArr; put_ethernet &rArr; encWrite &rArr; encSetBank &rArr; encWriteOp
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UdpServer_SendData
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UdpClient_SendData
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdData_Encrypt
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Calc_CRC
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_SendNxByte
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_SendNxByte
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_SendNxByte
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Handle
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Clr_AllRecord
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Get_RecordAgain
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Get_Record
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Get_RecordPoint
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_UnlockNxBox
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_LockNxBox
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Get_AllBoxUserCard
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Get_BoxUserCard
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Set_BoxUserCard
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Get_ValidCardList
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Set_ValidCardList
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_GetBoxInfo
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_SetBoxInfo
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_CheckBoxEmpty
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Get_BoxDoorStatus
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_OpenOneBox
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_SetBoxNum
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Set_Lockers
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_VoiceCmdTest
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_SetVoiceLevel
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_PlayVoice
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Get_CardKey
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Set_CardKey
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_FindCard
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Get_ServerIP
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Set_ServerIP
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Get_IP
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Set_IP
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_EepromWrite
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_EepromRead
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_RingBuzzer
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Set_NetworkSwitch
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_SysInit
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Set_Time
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Get_Time
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Get_MachineNum
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Set_MachineNum
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_RestSys
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Get_Version
</UL>

<P><STRONG><a name="[121]"></a>Comm_ApplyFor</STRONG> (Thumb, 236 bytes, Stack size 24 bytes, mid_comm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Comm_ApplyFor &rArr; UdpServer_SendData &rArr; udp_transmit &rArr; put_ethernet &rArr; encWrite &rArr; encSetBank &rArr; encWriteOp
</UL>
<BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UdpServer_SendData
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UdpClient_SendData
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdData_Encrypt
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Calc_CRC
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_SendNxByte
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTakeAway_OnlineAsk
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserConsign_OnlineAsk
</UL>

<P><STRONG><a name="[122]"></a>SendCmdToExtendLockers</STRONG> (Thumb, 246 bytes, Stack size 280 bytes, mid_comm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = SendCmdToExtendLockers &rArr; delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Calc_CRC
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_SendNxByte
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choice1BoxOpen_CheckResult
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choice1BoxOpen
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanExtendBoxStatus
</UL>

<P><STRONG><a name="[123]"></a>SlavePacketDecoding</STRONG> (Thumb, 194 bytes, Stack size 32 bytes, mid_comm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SlavePacketDecoding &rArr; Calc_CRC
</UL>
<BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Calc_CRC
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLedBlink
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choice1BoxOpen_CheckResult
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanExtendBoxStatus
</UL>

<P><STRONG><a name="[12b]"></a>CheckBoxOnLockersNum</STRONG> (Thumb, 134 bytes, Stack size 20 bytes, mid_lockers.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = CheckBoxOnLockersNum
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choice1BoxOpen_CheckResult
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choice1BoxOpen
</UL>

<P><STRONG><a name="[275]"></a>CheckEmptyBoxNum</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, mid_lockers.o(.text), UNUSED)

<P><STRONG><a name="[125]"></a>ParseBoxDoorStatus</STRONG> (Thumb, 212 bytes, Stack size 32 bytes, mid_lockers.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ParseBoxDoorStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choice1BoxOpen_CheckResult
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanExtendBoxStatus
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanLocalBoxStatus
</UL>

<P><STRONG><a name="[126]"></a>ParseBoxInsideStatus</STRONG> (Thumb, 216 bytes, Stack size 32 bytes, mid_lockers.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[127]"></a>ScanLocalBoxStatus</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, mid_lockers.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ScanLocalBoxStatus &rArr; GetBoxDoorStatus &rArr; HC_delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParseBoxDoorStatus
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBoxDoorStatus
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanAllBoxStatus
</UL>

<P><STRONG><a name="[128]"></a>ScanExtendBoxStatus</STRONG> (Thumb, 644 bytes, Stack size 8 bytes, mid_lockers.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = ScanExtendBoxStatus &rArr; SendCmdToExtendLockers &rArr; delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParseBoxDoorStatus
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SlavePacketDecoding
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCmdToExtendLockers
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clean_RS485RxdBuf
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choice1BoxOpen_CheckResult
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choice1BoxOpen
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanAllBoxStatus
</UL>

<P><STRONG><a name="[129]"></a>ScanAllBoxStatus</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, mid_lockers.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = ScanAllBoxStatus &rArr; ScanExtendBoxStatus &rArr; SendCmdToExtendLockers &rArr; delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanExtendBoxStatus
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanLocalBoxStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[12a]"></a>Choice1BoxOpen</STRONG> (Thumb, 102 bytes, Stack size 40 bytes, mid_lockers.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = Choice1BoxOpen &rArr; ScanExtendBoxStatus &rArr; SendCmdToExtendLockers &rArr; delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanExtendBoxStatus
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckBoxOnLockersNum
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCmdToExtendLockers
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenOneBox
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectOneBoxToOpen
</UL>

<P><STRONG><a name="[12c]"></a>Choice1BoxOpen_CheckResult</STRONG> (Thumb, 318 bytes, Stack size 48 bytes, mid_lockers.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = Choice1BoxOpen_CheckResult &rArr; ScanExtendBoxStatus &rArr; SendCmdToExtendLockers &rArr; delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanExtendBoxStatus
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParseBoxDoorStatus
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckBoxOnLockersNum
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SlavePacketDecoding
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCmdToExtendLockers
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBoxDoorStatus
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenOneBox
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clean_RS485RxdBuf
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectOneBoxToOpen
</UL>

<P><STRONG><a name="[12d]"></a>SelectOneBoxToOpen</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, mid_lockers.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = SelectOneBoxToOpen &rArr; Choice1BoxOpen_CheckResult &rArr; ScanExtendBoxStatus &rArr; SendCmdToExtendLockers &rArr; delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choice1BoxOpen_CheckResult
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choice1BoxOpen
</UL>
<BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTakes_OnlineAsk
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTakesWriteCard
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTakesByCardID
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_OpenOneBox
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lockers_TakeAwayByFinger
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_AnyFingerOrCard
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_AnyFinger
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_OnlineAsk
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_WriteCard
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_PreAuthorization
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_AnyCard
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clean_AllBox
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clean_OneBox
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open_AllBox
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open_OneBox
</UL>

<P><STRONG><a name="[12e]"></a>HandleTimeoutAlert</STRONG> (Thumb, 244 bytes, Stack size 8 bytes, mid_lockers.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = HandleTimeoutAlert &rArr; GUI_LockersNotice &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_LockersNotice
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Admin
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[131]"></a>UpdateEmptyBoxList</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, mid_lockers.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = UpdateEmptyBoxList &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_UnlockNxBox
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_LockNxBox
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Unlockin_Box
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lockin_Box
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clean_AllBox
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clean_OneBox
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_BoxNum
</UL>

<P><STRONG><a name="[18c]"></a>AddOneEmptyBox</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, mid_lockers.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTakes_OnlineAsk
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTakesWriteCard
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTakesByCardID
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lockers_TakeAwayByFinger
</UL>

<P><STRONG><a name="[220]"></a>DeleteOneEmptyBox</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, mid_lockers.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DeleteOneEmptyBox
</UL>
<BR>[Called By]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_AnyFingerOrCard
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_AnyFinger
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_OnlineAsk
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_WriteCard
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_PreAuthorization
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_AnyCard
</UL>

<P><STRONG><a name="[132]"></a>CheckBoxStatusChange</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, mid_lockers.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>

<P><STRONG><a name="[223]"></a>CheckValidityDate</STRONG> (Thumb, 108 bytes, Stack size 12 bytes, mid_lockers.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = CheckValidityDate
</UL>
<BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_WriteCard
</UL>

<P><STRONG><a name="[133]"></a>VoicePlay_DoorNotClose</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, mid_lockers.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = VoicePlay_DoorNotClose &rArr; Voice_Play &rArr; SendDataToVoice &rArr; UART2_SendNxByte
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_Play
</UL>
<BR>[Called By]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_AnyFingerOrCard
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_AnyFinger
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_OnlineAsk
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_WriteCard
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_PreAuthorization
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_AnyCard
</UL>

<P><STRONG><a name="[134]"></a>VoicePlay_xBoxOpen</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, mid_lockers.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = VoicePlay_xBoxOpen &rArr; Voice_Play &rArr; SendDataToVoice &rArr; UART2_SendNxByte
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_Play
</UL>
<BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTakes_OnlineAsk
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTakesWriteCard
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTakesByCardID
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lockers_TakeAwayByFinger
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_AnyFingerOrCard
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_AnyFinger
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_OnlineAsk
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_WriteCard
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_PreAuthorization
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_AnyCard
</UL>

<P><STRONG><a name="[92]"></a>ZiKu_GetChineseChar</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, mid_ziku.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZiKuNetSPI_Disable
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZiKuSPI_Enable
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Send1Byte
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Read1Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_HzMat
</UL>

<P><STRONG><a name="[137]"></a>Variable_Init</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, app_main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Variable_Init &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[138]"></a>System_Init</STRONG> (Thumb, 234 bytes, Stack size 8 bytes, app_main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = System_Init &rArr; FLASH_Init &rArr; FLASH_ReadID &rArr; FLASH_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time0_Init
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Host_Init
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExtendFunction_Init
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_Init
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keyboard_Init
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Init
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Eeprom_Init
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fingerprint_Init
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ConfigInit
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerCreate
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTimerInit
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Enable
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Init
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_Init
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseAllBox
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drv_74HC165_Init
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drv_74HC164_Init
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_Init
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_Init
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_Init
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Init
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[46]"></a>main</STRONG> (Thumb, 186 bytes, Stack size 0 bytes, app_main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 864 + Unknown Stack Size
<LI>Call Chain = main &rArr; KeyboardFunction &rArr; ArgCardOperation &rArr; GUI_NetParameters &rArr; GUI_ShowListMenu &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Feed
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Init
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread_UDP
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread_CommHandle
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Network_Init
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lockers_TakeAwayByFinger
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyboardFunction
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WorkStatus
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DepositKeyDown
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardOperation
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Variable_Init
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Admin
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateEmptyBoxList
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleTimeoutAlert
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanAllBoxStatus
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSysConfig
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRTCTime
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLedBlink
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wiegand_Init
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_VoiceLevel
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[14d]"></a>Comm_Get_Version</STRONG> (Thumb, 50 bytes, Stack size 112 bytes, app_comdeal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = Comm_Get_Version &rArr; CommDeal_Reply &rArr; UdpServer_SendData &rArr; udp_transmit &rArr; put_ethernet &rArr; encWrite &rArr; encSetBank &rArr; encWriteOp
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommDeal_Reply
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Handle
</UL>

<P><STRONG><a name="[14e]"></a>Comm_RestSys</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, app_comdeal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = Comm_RestSys &rArr; CommDeal_Reply &rArr; UdpServer_SendData &rArr; udp_transmit &rArr; put_ethernet &rArr; encWrite &rArr; encSetBank &rArr; encWriteOp
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommDeal_Reply
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Handle
</UL>

<P><STRONG><a name="[14f]"></a>Comm_Set_MachineNum</STRONG> (Thumb, 128 bytes, Stack size 128 bytes, app_comdeal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = Comm_Set_MachineNum &rArr; Store_Parameters &rArr; I2C_EE_BufferWrite &rArr; I2C_EE_PageWrite &rArr; EP_WriteByte &rArr; EP_Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommDeal_Reply
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_Parameters
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Handle
</UL>

<P><STRONG><a name="[150]"></a>Comm_Get_MachineNum</STRONG> (Thumb, 44 bytes, Stack size 112 bytes, app_comdeal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = Comm_Get_MachineNum &rArr; CommDeal_Reply &rArr; UdpServer_SendData &rArr; udp_transmit &rArr; put_ethernet &rArr; encWrite &rArr; encSetBank &rArr; encWriteOp
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommDeal_Reply
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread_CommHandle
</UL>

<P><STRONG><a name="[151]"></a>Comm_Get_Time</STRONG> (Thumb, 44 bytes, Stack size 112 bytes, app_comdeal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = Comm_Get_Time &rArr; CommDeal_Reply &rArr; UdpServer_SendData &rArr; udp_transmit &rArr; put_ethernet &rArr; encWrite &rArr; encSetBank &rArr; encWriteOp
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommDeal_Reply
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Handle
</UL>

<P><STRONG><a name="[152]"></a>Comm_Set_Time</STRONG> (Thumb, 284 bytes, Stack size 152 bytes, app_comdeal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = Comm_Set_Time &rArr; CommDeal_Reply &rArr; UdpServer_SendData &rArr; udp_transmit &rArr; put_ethernet &rArr; encWrite &rArr; encSetBank &rArr; encWriteOp
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDateTime
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chack_Time
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chack_Date
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommDeal_Reply
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Handle
</UL>

<P><STRONG><a name="[153]"></a>Comm_SysInit</STRONG> (Thumb, 36 bytes, Stack size 112 bytes, app_comdeal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 536 + Unknown Stack Size
<LI>Call Chain = Comm_SysInit &rArr; SysConfig_Init &rArr; Init_LockersArg &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommDeal_Reply
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysConfig_Init
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Handle
</UL>

<P><STRONG><a name="[154]"></a>Comm_Set_NetworkSwitch</STRONG> (Thumb, 74 bytes, Stack size 40 bytes, app_comdeal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = Comm_Set_NetworkSwitch &rArr; Store_Parameters &rArr; I2C_EE_BufferWrite &rArr; I2C_EE_PageWrite &rArr; EP_WriteByte &rArr; EP_Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommDeal_Reply
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_Parameters
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Handle
</UL>

<P><STRONG><a name="[155]"></a>Comm_RingBuzzer</STRONG> (Thumb, 54 bytes, Stack size 120 bytes, app_comdeal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = Comm_RingBuzzer &rArr; CommDeal_Reply &rArr; UdpServer_SendData &rArr; udp_transmit &rArr; put_ethernet &rArr; encWrite &rArr; encSetBank &rArr; encWriteOp
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommDeal_Reply
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Handle
</UL>

<P><STRONG><a name="[156]"></a>Comm_EepromRead</STRONG> (Thumb, 104 bytes, Stack size 544 bytes, app_comdeal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 648<LI>Call Chain = Comm_EepromRead &rArr; CommDeal_Reply &rArr; UdpServer_SendData &rArr; udp_transmit &rArr; put_ethernet &rArr; encWrite &rArr; encSetBank &rArr; encWriteOp
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EE_BufferRead
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommDeal_Reply
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Handle
</UL>

<P><STRONG><a name="[157]"></a>Comm_EepromWrite</STRONG> (Thumb, 134 bytes, Stack size 544 bytes, app_comdeal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 648<LI>Call Chain = Comm_EepromWrite &rArr; CommDeal_Reply &rArr; UdpServer_SendData &rArr; udp_transmit &rArr; put_ethernet &rArr; encWrite &rArr; encSetBank &rArr; encWriteOp
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EE_BufferWrite
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommDeal_Reply
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Handle
</UL>

<P><STRONG><a name="[158]"></a>Comm_Set_IP</STRONG> (Thumb, 170 bytes, Stack size 120 bytes, app_comdeal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = Comm_Set_IP &rArr; Store_Parameters &rArr; I2C_EE_BufferWrite &rArr; I2C_EE_PageWrite &rArr; EP_WriteByte &rArr; EP_Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommDeal_Reply
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_Parameters
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Handle
</UL>

<P><STRONG><a name="[159]"></a>Comm_Get_IP</STRONG> (Thumb, 84 bytes, Stack size 112 bytes, app_comdeal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = Comm_Get_IP &rArr; CommDeal_Reply &rArr; UdpServer_SendData &rArr; udp_transmit &rArr; put_ethernet &rArr; encWrite &rArr; encSetBank &rArr; encWriteOp
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommDeal_Reply
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Handle
</UL>

<P><STRONG><a name="[15a]"></a>Comm_Set_ServerIP</STRONG> (Thumb, 78 bytes, Stack size 120 bytes, app_comdeal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = Comm_Set_ServerIP &rArr; Store_Parameters &rArr; I2C_EE_BufferWrite &rArr; I2C_EE_PageWrite &rArr; EP_WriteByte &rArr; EP_Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommDeal_Reply
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_Parameters
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Handle
</UL>

<P><STRONG><a name="[15b]"></a>Comm_Get_ServerIP</STRONG> (Thumb, 48 bytes, Stack size 112 bytes, app_comdeal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = Comm_Get_ServerIP &rArr; CommDeal_Reply &rArr; UdpServer_SendData &rArr; udp_transmit &rArr; put_ethernet &rArr; encWrite &rArr; encSetBank &rArr; encWriteOp
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommDeal_Reply
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Handle
</UL>

<P><STRONG><a name="[15c]"></a>Comm_FindCard</STRONG> (Thumb, 50 bytes, Stack size 112 bytes, app_comdeal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = Comm_FindCard &rArr; RF_Read_CardUID &rArr; MIF_AntiColl &rArr; Command_Send &rArr; Write_FIFO &rArr; FM_Write_Reg &rArr; FM_Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommDeal_Reply
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_Read_CardUID
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Handle
</UL>

<P><STRONG><a name="[15d]"></a>Comm_Set_CardKey</STRONG> (Thumb, 118 bytes, Stack size 88 bytes, app_comdeal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = Comm_Set_CardKey &rArr; Store_Parameters &rArr; I2C_EE_BufferWrite &rArr; I2C_EE_PageWrite &rArr; EP_WriteByte &rArr; EP_Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommDeal_Reply
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_Parameters
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Handle
</UL>

<P><STRONG><a name="[15e]"></a>Comm_Get_CardKey</STRONG> (Thumb, 52 bytes, Stack size 120 bytes, app_comdeal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = Comm_Get_CardKey &rArr; CommDeal_Reply &rArr; UdpServer_SendData &rArr; udp_transmit &rArr; put_ethernet &rArr; encWrite &rArr; encSetBank &rArr; encWriteOp
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommDeal_Reply
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Handle
</UL>

<P><STRONG><a name="[15f]"></a>Comm_PlayVoice</STRONG> (Thumb, 62 bytes, Stack size 128 bytes, app_comdeal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = Comm_PlayVoice &rArr; CommDeal_Reply &rArr; UdpServer_SendData &rArr; udp_transmit &rArr; put_ethernet &rArr; encWrite &rArr; encSetBank &rArr; encWriteOp
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommDeal_Reply
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_Play
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Handle
</UL>

<P><STRONG><a name="[160]"></a>Comm_SetVoiceLevel</STRONG> (Thumb, 76 bytes, Stack size 128 bytes, app_comdeal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = Comm_SetVoiceLevel &rArr; Store_Parameters &rArr; I2C_EE_BufferWrite &rArr; I2C_EE_PageWrite &rArr; EP_WriteByte &rArr; EP_Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommDeal_Reply
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_Parameters
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_VoiceLevel
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Handle
</UL>

<P><STRONG><a name="[161]"></a>Comm_VoiceCmdTest</STRONG> (Thumb, 50 bytes, Stack size 128 bytes, app_comdeal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = Comm_VoiceCmdTest &rArr; CommDeal_Reply &rArr; UdpServer_SendData &rArr; udp_transmit &rArr; put_ethernet &rArr; encWrite &rArr; encSetBank &rArr; encWriteOp
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommDeal_Reply
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_SendCmd
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Handle
</UL>

<P><STRONG><a name="[162]"></a>Comm_Set_Lockers</STRONG> (Thumb, 218 bytes, Stack size 128 bytes, app_comdeal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = Comm_Set_Lockers &rArr; Store_Parameters &rArr; I2C_EE_BufferWrite &rArr; I2C_EE_PageWrite &rArr; EP_WriteByte &rArr; EP_Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommDeal_Reply
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_Parameters
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Handle
</UL>

<P><STRONG><a name="[163]"></a>Comm_SetBoxNum</STRONG> (Thumb, 172 bytes, Stack size 128 bytes, app_comdeal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = Comm_SetBoxNum &rArr; Store_Parameters &rArr; I2C_EE_BufferWrite &rArr; I2C_EE_PageWrite &rArr; EP_WriteByte &rArr; EP_Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommDeal_Reply
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_Parameters
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Handle
</UL>

<P><STRONG><a name="[164]"></a>Comm_OpenOneBox</STRONG> (Thumb, 122 bytes, Stack size 160 bytes, app_comdeal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 528<LI>Call Chain = Comm_OpenOneBox &rArr; SelectOneBoxToOpen &rArr; Choice1BoxOpen_CheckResult &rArr; ScanExtendBoxStatus &rArr; SendCmdToExtendLockers &rArr; delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreOpenBoxRecord
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectOneBoxToOpen
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommDeal_Reply
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Handle
</UL>

<P><STRONG><a name="[166]"></a>Comm_Get_BoxDoorStatus</STRONG> (Thumb, 92 bytes, Stack size 328 bytes, app_comdeal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = Comm_Get_BoxDoorStatus &rArr; CommDeal_Reply &rArr; UdpServer_SendData &rArr; udp_transmit &rArr; put_ethernet &rArr; encWrite &rArr; encSetBank &rArr; encWriteOp
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommDeal_Reply
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Handle
</UL>

<P><STRONG><a name="[167]"></a>Comm_CheckBoxEmpty</STRONG> (Thumb, 96 bytes, Stack size 328 bytes, app_comdeal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = Comm_CheckBoxEmpty &rArr; CommDeal_Reply &rArr; UdpServer_SendData &rArr; udp_transmit &rArr; put_ethernet &rArr; encWrite &rArr; encSetBank &rArr; encWriteOp
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommDeal_Reply
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Handle
</UL>

<P><STRONG><a name="[168]"></a>Comm_SetBoxInfo</STRONG> (Thumb, 186 bytes, Stack size 120 bytes, app_comdeal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = Comm_SetBoxInfo &rArr; Store_Parameters &rArr; I2C_EE_BufferWrite &rArr; I2C_EE_PageWrite &rArr; EP_WriteByte &rArr; EP_Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommDeal_Reply
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_Parameters
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Handle
</UL>

<P><STRONG><a name="[169]"></a>Comm_GetBoxInfo</STRONG> (Thumb, 80 bytes, Stack size 328 bytes, app_comdeal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = Comm_GetBoxInfo &rArr; CommDeal_Reply &rArr; UdpServer_SendData &rArr; udp_transmit &rArr; put_ethernet &rArr; encWrite &rArr; encSetBank &rArr; encWriteOp
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommDeal_Reply
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Handle
</UL>

<P><STRONG><a name="[16a]"></a>Comm_Set_ValidCardList</STRONG> (Thumb, 112 bytes, Stack size 64 bytes, app_comdeal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = Comm_Set_ValidCardList &rArr; CommDeal_Reply &rArr; UdpServer_SendData &rArr; udp_transmit &rArr; put_ethernet &rArr; encWrite &rArr; encSetBank &rArr; encWriteOp
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EE_BufferWrite
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommDeal_Reply
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Handle
</UL>

<P><STRONG><a name="[16b]"></a>Comm_Get_ValidCardList</STRONG> (Thumb, 138 bytes, Stack size 544 bytes, app_comdeal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 648<LI>Call Chain = Comm_Get_ValidCardList &rArr; CommDeal_Reply &rArr; UdpServer_SendData &rArr; udp_transmit &rArr; put_ethernet &rArr; encWrite &rArr; encSetBank &rArr; encWriteOp
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EE_BufferRead
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommDeal_Reply
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Handle
</UL>

<P><STRONG><a name="[16c]"></a>Comm_Set_BoxUserCard</STRONG> (Thumb, 242 bytes, Stack size 96 bytes, app_comdeal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = Comm_Set_BoxUserCard &rArr; Store_Parameters &rArr; I2C_EE_BufferWrite &rArr; I2C_EE_PageWrite &rArr; EP_WriteByte &rArr; EP_Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommDeal_Reply
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_Parameters
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Handle
</UL>

<P><STRONG><a name="[16d]"></a>Comm_Get_BoxUserCard</STRONG> (Thumb, 152 bytes, Stack size 232 bytes, app_comdeal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = Comm_Get_BoxUserCard &rArr; CommDeal_Reply &rArr; UdpServer_SendData &rArr; udp_transmit &rArr; put_ethernet &rArr; encWrite &rArr; encSetBank &rArr; encWriteOp
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommDeal_Reply
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Handle
</UL>

<P><STRONG><a name="[16e]"></a>Comm_Get_AllBoxUserCard</STRONG> (Thumb, 148 bytes, Stack size 552 bytes, app_comdeal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = Comm_Get_AllBoxUserCard &rArr; CommDeal_Reply &rArr; UdpServer_SendData &rArr; udp_transmit &rArr; put_ethernet &rArr; encWrite &rArr; encSetBank &rArr; encWriteOp
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Feed
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommDeal_Reply
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Handle
</UL>

<P><STRONG><a name="[16f]"></a>Comm_LockNxBox</STRONG> (Thumb, 174 bytes, Stack size 88 bytes, app_comdeal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = Comm_LockNxBox &rArr; Store_Parameters &rArr; I2C_EE_BufferWrite &rArr; I2C_EE_PageWrite &rArr; EP_WriteByte &rArr; EP_Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateEmptyBoxList
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommDeal_Reply
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_Parameters
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Handle
</UL>

<P><STRONG><a name="[170]"></a>Comm_UnlockNxBox</STRONG> (Thumb, 174 bytes, Stack size 88 bytes, app_comdeal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = Comm_UnlockNxBox &rArr; Store_Parameters &rArr; I2C_EE_BufferWrite &rArr; I2C_EE_PageWrite &rArr; EP_WriteByte &rArr; EP_Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateEmptyBoxList
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommDeal_Reply
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_Parameters
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Handle
</UL>

<P><STRONG><a name="[171]"></a>Comm_Get_RecordPoint</STRONG> (Thumb, 158 bytes, Stack size 128 bytes, app_comdeal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = Comm_Get_RecordPoint &rArr; CommDeal_Reply &rArr; UdpServer_SendData &rArr; udp_transmit &rArr; put_ethernet &rArr; encWrite &rArr; encSetBank &rArr; encWriteOp
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommDeal_Reply
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Handle
</UL>

<P><STRONG><a name="[172]"></a>Comm_Get_Record</STRONG> (Thumb, 316 bytes, Stack size 544 bytes, app_comdeal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 664<LI>Call Chain = Comm_Get_Record &rArr; Store_Parameters &rArr; I2C_EE_BufferWrite &rArr; I2C_EE_PageWrite &rArr; EP_WriteByte &rArr; EP_Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Feed
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadOneRecord_ToArrayBuf
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommDeal_Reply
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_Parameters
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Handle
</UL>

<P><STRONG><a name="[174]"></a>Comm_Get_RecordAgain</STRONG> (Thumb, 124 bytes, Stack size 544 bytes, app_comdeal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 648<LI>Call Chain = Comm_Get_RecordAgain &rArr; CommDeal_Reply &rArr; UdpServer_SendData &rArr; udp_transmit &rArr; put_ethernet &rArr; encWrite &rArr; encSetBank &rArr; encWriteOp
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Feed
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadOneRecord_ToArrayBuf
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommDeal_Reply
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Handle
</UL>

<P><STRONG><a name="[175]"></a>Comm_Clr_AllRecord</STRONG> (Thumb, 48 bytes, Stack size 40 bytes, app_comdeal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = Comm_Clr_AllRecord &rArr; Clear_Record &rArr; Store_Parameters &rArr; I2C_EE_BufferWrite &rArr; I2C_EE_PageWrite &rArr; EP_WriteByte &rArr; EP_Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_Record
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommDeal_Reply
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Handle
</UL>

<P><STRONG><a name="[177]"></a>Comm_Handle</STRONG> (Thumb, 576 bytes, Stack size 24 bytes, app_comdeal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 688 + Unknown Stack Size
<LI>Call Chain = Comm_Handle &rArr; Comm_Get_Record &rArr; Store_Parameters &rArr; I2C_EE_BufferWrite &rArr; I2C_EE_PageWrite &rArr; EP_WriteByte &rArr; EP_Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Clr_AllRecord
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Get_RecordAgain
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Get_Record
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Get_RecordPoint
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_UnlockNxBox
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_LockNxBox
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Get_AllBoxUserCard
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Get_BoxUserCard
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Set_BoxUserCard
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Get_ValidCardList
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Set_ValidCardList
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_GetBoxInfo
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_SetBoxInfo
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_CheckBoxEmpty
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Get_BoxDoorStatus
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_OpenOneBox
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_SetBoxNum
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Set_Lockers
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_VoiceCmdTest
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_SetVoiceLevel
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_PlayVoice
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Get_CardKey
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Set_CardKey
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_FindCard
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Get_ServerIP
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Set_ServerIP
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Get_IP
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Set_IP
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_EepromWrite
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_EepromRead
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_RingBuzzer
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Set_NetworkSwitch
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_SysInit
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Set_Time
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Get_Time
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Set_MachineNum
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_RestSys
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Get_Version
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommDeal_Reply
</UL>
<BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread_CommHandle
</UL>

<P><STRONG><a name="[14c]"></a>Thread_CommHandle</STRONG> (Thumb, 200 bytes, Stack size 8 bytes, app_comdeal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 696 + Unknown Stack Size
<LI>Call Chain = Thread_CommHandle &rArr; Comm_Handle &rArr; Comm_Get_Record &rArr; Store_Parameters &rArr; I2C_EE_BufferWrite &rArr; I2C_EE_PageWrite &rArr; EP_WriteByte &rArr; EP_Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServerReply_CommHandle
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Handle
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Get_MachineNum
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLedBlink
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[165]"></a>StoreOpenBoxRecord</STRONG> (Thumb, 254 bytes, Stack size 16 bytes, app_record.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = StoreOpenBoxRecord &rArr; Store_Parameters &rArr; I2C_EE_BufferWrite &rArr; I2C_EE_PageWrite &rArr; EP_WriteByte &rArr; EP_Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_BufferWrite
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_SectorErase
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_Parameters
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreRecord_OpenBoxByFinger
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreRecord_OpenBoxByCard
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_OpenOneBox
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clean_AllBox
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clean_OneBox
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open_AllBox
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open_OneBox
</UL>

<P><STRONG><a name="[176]"></a>Clear_Record</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, app_record.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = Clear_Record &rArr; Store_Parameters &rArr; I2C_EE_BufferWrite &rArr; I2C_EE_PageWrite &rArr; EP_WriteByte &rArr; EP_Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_BlockErase
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_Parameters
</UL>
<BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Clr_AllRecord
</UL>

<P><STRONG><a name="[179]"></a>ReadOneRecord</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, app_record.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ReadOneRecord &rArr; FLASH_FastReadBuffer &rArr; FLASH_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_FastReadBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryBoxRecord
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadOneRecord_ToArrayBuf
</UL>

<P><STRONG><a name="[173]"></a>ReadOneRecord_ToArrayBuf</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, app_record.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = ReadOneRecord_ToArrayBuf &rArr; ReadOneRecord &rArr; FLASH_FastReadBuffer &rArr; FLASH_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadOneRecord
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Get_RecordAgain
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Get_Record
</UL>

<P><STRONG><a name="[17a]"></a>QueryBoxRecord</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, app_record.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = QueryBoxRecord &rArr; ReadOneRecord &rArr; FLASH_FastReadBuffer &rArr; FLASH_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Feed
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadOneRecord
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_QueryBoxRecord
</UL>

<P><STRONG><a name="[17b]"></a>StoreRecord_OpenBoxByCard</STRONG> (Thumb, 60 bytes, Stack size 48 bytes, app_record.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = StoreRecord_OpenBoxByCard &rArr; StoreOpenBoxRecord &rArr; Store_Parameters &rArr; I2C_EE_BufferWrite &rArr; I2C_EE_PageWrite &rArr; EP_WriteByte &rArr; EP_Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreOpenBoxRecord
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTakes_OnlineAsk
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTakesWriteCard
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTakesByCardID
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_AnyFingerOrCard
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_AnyFinger
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_OnlineAsk
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_WriteCard
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_PreAuthorization
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_AnyCard
</UL>

<P><STRONG><a name="[17c]"></a>StoreRecord_OpenBoxByFinger</STRONG> (Thumb, 54 bytes, Stack size 48 bytes, app_record.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = StoreRecord_OpenBoxByFinger &rArr; StoreOpenBoxRecord &rArr; Store_Parameters &rArr; I2C_EE_BufferWrite &rArr; I2C_EE_PageWrite &rArr; EP_WriteByte &rArr; EP_Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreOpenBoxRecord
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lockers_TakeAwayByFinger
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_AnyFingerOrCard
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_AnyFinger
</UL>

<P><STRONG><a name="[17d]"></a>Get_IC_ID_CardSN</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, app_card.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = Get_IC_ID_CardSN &rArr; RF_GetCardUID &rArr; MIF_AntiColl &rArr; Command_Send &rArr; Write_FIFO &rArr; FM_Write_Reg &rArr; FM_Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wiegand_ReardCardID
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_GetCardUID
</UL>
<BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTakes_OnlineAsk
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTakesWriteCard
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTakesByCardID
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArgCardOperation
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_AnyFingerOrCard
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_OnlineAsk
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_WriteCard
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_PreAuthorization
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_AnyCard
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_ValidCard
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_AddAdminCard
</UL>

<P><STRONG><a name="[17f]"></a>CheckCardValid</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, app_card.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = CheckCardValid &rArr; I2C_EE_BufferRead &rArr; EP_ReadByte &rArr; EP_Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Feed
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EE_BufferRead
</UL>
<BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_PreAuthorization
</UL>

<P><STRONG><a name="[180]"></a>AddOneValidCardNum</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, app_card.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = AddOneValidCardNum &rArr; Store_Parameters &rArr; I2C_EE_BufferWrite &rArr; I2C_EE_PageWrite &rArr; EP_WriteByte &rArr; EP_Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Feed
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EE_BufferRead
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EE_BufferWrite
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_Parameters
</UL>
<BR>[Called By]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_ValidCard
</UL>

<P><STRONG><a name="[181]"></a>AdminCard_Login</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, app_card.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = AdminCard_Login &rArr; Admin_Login &rArr; GUI_ShowPassword &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_Login
</UL>
<BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTakes_OnlineAsk
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTakesWriteCard
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTakesByCardID
</UL>

<P><STRONG><a name="[183]"></a>SuperCard_SetAdmin</STRONG> (Thumb, 270 bytes, Stack size 24 bytes, app_card.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = SuperCard_SetAdmin &rArr; GUI_ShowMessage &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowMessage
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowNotice
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_Parameters
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_ReadCard
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTakes_OnlineAsk
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTakesWriteCard
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTakesByCardID
</UL>

<P><STRONG><a name="[185]"></a>ArgCardOperation</STRONG> (Thumb, 1046 bytes, Stack size 112 bytes, app_card.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 856 + Unknown Stack Size
<LI>Call Chain = ArgCardOperation &rArr; GUI_NetParameters &rArr; GUI_ShowListMenu &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_NetParameters
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_LockersParameters
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_IC_ID_CardSN
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Admin
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_Parameters
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AsciiStr_To_UInt
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UInt_To_Ascii
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_ReadCard
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_WriteCard_1Block
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyboardFunction
</UL>

<P><STRONG><a name="[189]"></a>UserTakesByCardID</STRONG> (Thumb, 1152 bytes, Stack size 32 bytes, app_card.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 400 + Unknown Stack Size
<LI>Call Chain = UserTakesByCardID &rArr; SelectOneBoxToOpen &rArr; Choice1BoxOpen_CheckResult &rArr; ScanExtendBoxStatus &rArr; SendCmdToExtendLockers &rArr; delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Feed
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UserTakeAwwyFail
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Open1Box
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SuperCard_SetAdmin
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdminCard_Login
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_IC_ID_CardSN
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreRecord_OpenBoxByCard
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_LockersNotice
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Admin
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoicePlay_xBoxOpen
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddOneEmptyBox
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectOneBoxToOpen
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_Parameters
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_Play
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardOperation
</UL>

<P><STRONG><a name="[18d]"></a>UserTakesWriteCard</STRONG> (Thumb, 1494 bytes, Stack size 40 bytes, app_card.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408 + Unknown Stack Size
<LI>Call Chain = UserTakesWriteCard &rArr; GUI_PackageInOtherLockers &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Feed
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UserTakeAwwyFail
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PackageInOtherLockers
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Open1Box
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SuperCard_SetAdmin
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdminCard_Login
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_IC_ID_CardSN
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreRecord_OpenBoxByCard
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_LockersNotice
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Admin
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoicePlay_xBoxOpen
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddOneEmptyBox
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectOneBoxToOpen
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Calc_CRC
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_Parameters
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_ReadCard
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_WriteCard_1Block
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_Play
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardOperation
</UL>

<P><STRONG><a name="[18f]"></a>UserTakes_OnlineAsk</STRONG> (Thumb, 1480 bytes, Stack size 32 bytes, app_card.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 400 + Unknown Stack Size
<LI>Call Chain = UserTakes_OnlineAsk &rArr; GUI_PackageInOtherLockers &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Feed
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTakeAway_OnlineAsk
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UserTakeAwwyFail
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowMessage
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PackageInOtherLockers
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Open1Box
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SuperCard_SetAdmin
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdminCard_Login
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_IC_ID_CardSN
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreRecord_OpenBoxByCard
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_LockersNotice
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Admin
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoicePlay_xBoxOpen
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddOneEmptyBox
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectOneBoxToOpen
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowNotice
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_Parameters
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_Play
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardOperation
</UL>

<P><STRONG><a name="[146]"></a>CardOperation</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, app_card.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = CardOperation &rArr; UserTakesWriteCard &rArr; GUI_PackageInOtherLockers &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTakes_OnlineAsk
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTakesWriteCard
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTakesByCardID
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyboardFunction
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[192]"></a>csum</STRONG> (Thumb, 78 bytes, Stack size 20 bytes, app_network.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = csum
</UL>
<BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;make_icmp
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;make_ip
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_icmp
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_ip
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_udp
</UL>

<P><STRONG><a name="[191]"></a>check_udp</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, app_network.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = check_udp &rArr; csum
</UL>
<BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;csum
</UL>
<BR>[Called By]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;make_udp
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_udp
</UL>

<P><STRONG><a name="[1a2]"></a>is_arp</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, app_network.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_net_process
</UL>

<P><STRONG><a name="[193]"></a>is_ip</STRONG> (Thumb, 210 bytes, Stack size 24 bytes, app_network.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = is_ip &rArr; csum
</UL>
<BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;csum
</UL>
<BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_net_process
</UL>

<P><STRONG><a name="[194]"></a>is_icmp</STRONG> (Thumb, 58 bytes, Stack size 12 bytes, app_network.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = is_icmp &rArr; csum
</UL>
<BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;csum
</UL>
<BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_net_process
</UL>

<P><STRONG><a name="[195]"></a>is_udp</STRONG> (Thumb, 76 bytes, Stack size 12 bytes, app_network.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = is_udp &rArr; check_udp &rArr; csum
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_udp
</UL>
<BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_net_process
</UL>

<P><STRONG><a name="[197]"></a>getip_srce</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, app_network.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_net_process
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getudp_srce
</UL>

<P><STRONG><a name="[199]"></a>getip_locdest</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, app_network.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getudp_locdest
</UL>

<P><STRONG><a name="[196]"></a>getudp_srce</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, app_network.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = getudp_srce
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getip_srce
</UL>
<BR>[Called By]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_receive
</UL>

<P><STRONG><a name="[198]"></a>getudp_locdest</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, app_network.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = getudp_locdest
</UL>
<BR>[Calls]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getip_locdest
</UL>
<BR>[Called By]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_receive
</UL>

<P><STRONG><a name="[19b]"></a>make_frame</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, app_network.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;make_arp
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;make_ip
</UL>

<P><STRONG><a name="[19a]"></a>make_ip</STRONG> (Thumb, 122 bytes, Stack size 12 bytes, app_network.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = make_ip &rArr; csum
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;make_frame
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;csum
</UL>
<BR>[Called By]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;make_udp
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;make_icmp
</UL>

<P><STRONG><a name="[19c]"></a>make_icmp</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, app_network.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = make_icmp &rArr; make_ip &rArr; csum
</UL>
<BR>[Calls]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;make_ip
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;csum
</UL>
<BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_net_process
</UL>

<P><STRONG><a name="[19d]"></a>make_udp</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, app_network.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = make_udp &rArr; check_udp &rArr; csum
</UL>
<BR>[Calls]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;make_ip
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_udp
</UL>
<BR>[Called By]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_transmit
</UL>

<P><STRONG><a name="[19e]"></a>make_arp</STRONG> (Thumb, 158 bytes, Stack size 8 bytes, app_network.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = make_arp
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;make_frame
</UL>
<BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_net_process
</UL>

<P><STRONG><a name="[19f]"></a>udp_transmit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, app_network.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = udp_transmit &rArr; put_ethernet &rArr; encWrite &rArr; encSetBank &rArr; encWriteOp
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_ethernet
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;make_udp
</UL>
<BR>[Called By]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_receive
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UdpServer_SendData
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UdpClient_SendData
</UL>

<P><STRONG><a name="[1a0]"></a>udp_receive</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, app_network.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = udp_receive &rArr; udp_transmit &rArr; put_ethernet &rArr; encWrite &rArr; encSetBank &rArr; encWriteOp
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_transmit
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getudp_locdest
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getudp_srce
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_net_process
</UL>

<P><STRONG><a name="[1a1]"></a>do_net_process</STRONG> (Thumb, 182 bytes, Stack size 8 bytes, app_network.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = do_net_process &rArr; udp_receive &rArr; udp_transmit &rArr; put_ethernet &rArr; encWrite &rArr; encSetBank &rArr; encWriteOp
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_ethernet
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_receive
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;make_arp
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;make_icmp
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getip_srce
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_udp
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_icmp
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_ip
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_arp
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread_UDP
</UL>

<P><STRONG><a name="[1a5]"></a>ReadNetAddrInfo</STRONG> (Thumb, 124 bytes, Stack size 0 bytes, app_network.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Network_Init
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UdpClient_SendData
</UL>

<P><STRONG><a name="[1a3]"></a>AutoSave_ServerAddr</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, app_network.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_Parameters
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>

<P><STRONG><a name="[1a4]"></a>AutoSave_ServerMAC</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, app_network.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = AutoSave_ServerMAC &rArr; Store_Parameters &rArr; I2C_EE_BufferWrite &rArr; I2C_EE_PageWrite &rArr; EP_WriteByte &rArr; EP_Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_Parameters
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread_UDP
</UL>

<P><STRONG><a name="[107]"></a>CreateSysMAC</STRONG> (Thumb, 74 bytes, Stack size 20 bytes, app_network.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = CreateSysMAC
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Network_Init
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_NetworkArg
</UL>

<P><STRONG><a name="[145]"></a>Network_Init</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, app_network.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Network_Init &rArr; encInit &rArr; encPhyWrite &rArr; encWrite &rArr; encSetBank &rArr; encWriteOp
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encInit
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadNetAddrInfo
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateSysMAC
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[11f]"></a>UdpClient_SendData</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, app_network.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = UdpClient_SendData &rArr; udp_transmit &rArr; put_ethernet &rArr; encWrite &rArr; encSetBank &rArr; encWriteOp
</UL>
<BR>[Calls]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadNetAddrInfo
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_transmit
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_ApplyFor
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommDeal_Reply
</UL>

<P><STRONG><a name="[120]"></a>UdpServer_SendData</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, app_network.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = UdpServer_SendData &rArr; udp_transmit &rArr; put_ethernet &rArr; encWrite &rArr; encSetBank &rArr; encWriteOp
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_transmit
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_ApplyFor
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommDeal_Reply
</UL>

<P><STRONG><a name="[14b]"></a>Thread_UDP</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, app_network.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = Thread_UDP &rArr; AutoSave_ServerMAC &rArr; Store_Parameters &rArr; I2C_EE_BufferWrite &rArr; I2C_EE_PageWrite &rArr; EP_WriteByte &rArr; EP_Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ethernet
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoSave_ServerMAC
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_net_process
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_PacketDeal
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1a6]"></a>LCD_DisplayStr</STRONG> (Thumb, 36 bytes, Stack size 32 bytes, app_gui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayString
</UL>
<BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UserTakeAwwyFail
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowMessage
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PackageInOtherLockers
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Open1Box
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_LockersNotice
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Admin
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowNotice
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Unlockin_Box
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lockin_Box
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clean_OneBox
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UserAccess
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowIDPosition
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UserConsignFail
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PlsCloseBoxDoor
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ChoiceAdminMenu
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetUIntValue
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPickUpTimeout
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPickUpAwaitTime
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InputAllowOpenBoxNum
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetCardSector
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_QueryBoxStatusList
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_QueryLockBoxList
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_QueryBoxRecord
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AskUnlockinBox
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AskLockinBox
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClrBoxNotice
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddCard2Box
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddValidCard
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InputName
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ChangePassword
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowPassword
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_OnStandby
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EmptyBoxCount
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Registration
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InputServerPort
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InputIp
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ChoiceNetInfo
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetNetSwitch
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InputMachineNum
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InputVoiceLevel
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetWorkMode
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetIDCardSwitch
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBoxDoorCheckSwitch
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDebugMode
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTime
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Time
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BoxBeLocked
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Open1BoxFaild
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AdminSetBoxNum
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InputBoxID
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InputUseDate
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ChoiceKeyboardType
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowSysVersion
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowTowRowMessage
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowIconMenu
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowListMenu
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UpdateDisplay
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PromptBigBox
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PromptBox
</UL>

<P><STRONG><a name="[1a7]"></a>GUI_PromptBox</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, app_gui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fill
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStr
</UL>
<BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UserTakeAwwyFail
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowMessage
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PackageInOtherLockers
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Open1Box
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_LockersNotice
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowNotice
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UserAccess
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowIDPosition
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UserConsignFail
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PlsCloseBoxDoor
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ChoiceAdminMenu
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetUIntValue
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPickUpTimeout
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPickUpAwaitTime
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InputAllowOpenBoxNum
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetCardSector
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AskUnlockinBox
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AskLockinBox
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClrBoxNotice
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddCard2Box
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddValidCard
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InputName
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ChangePassword
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowPassword
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Registration
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InputServerPort
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InputIp
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ChoiceNetInfo
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetNetSwitch
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InputMachineNum
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InputVoiceLevel
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetIDCardSwitch
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBoxDoorCheckSwitch
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDebugMode
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTime
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BoxBeLocked
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Open1BoxFaild
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AdminSetBoxNum
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InputBoxID
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InputUseDate
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ChoiceKeyboardType
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowSysVersion
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowTowRowMessage
</UL>

<P><STRONG><a name="[1a8]"></a>GUI_PromptBigBox</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, app_gui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = GUI_PromptBigBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fill
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStr
</UL>
<BR>[Called By]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_QueryBoxStatusList
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_QueryLockBoxList
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_QueryBoxRecord
</UL>

<P><STRONG><a name="[1a9]"></a>GUI_UpdateDisplay</STRONG> (Thumb, 204 bytes, Stack size 24 bytes, app_gui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = GUI_UpdateDisplay &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowIcon
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStr
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowIconMenu
</UL>

<P><STRONG><a name="[1aa]"></a>GUI_ShowListMenu</STRONG> (Thumb, 180 bytes, Stack size 32 bytes, app_gui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = GUI_ShowListMenu &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fill
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStr
</UL>
<BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_NetParameters
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_LockersParameters
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetWorkMode
</UL>

<P><STRONG><a name="[1ab]"></a>GUI_ShowIconMenu</STRONG> (Thumb, 520 bytes, Stack size 40 bytes, app_gui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = GUI_ShowIconMenu &rArr; GUI_UpdateDisplay &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fill
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UpdateDisplay
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStr
</UL>
<BR>[Called By]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SuperAdmin_SysSetMenu
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TopAdmin_SysSetMenu
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TopAdminMenu
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Admin_SysSetMenu
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AdminMenu
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowMenu
</UL>

<P><STRONG><a name="[1ac]"></a>GUI_ShowMenu</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, app_gui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = GUI_ShowMenu &rArr; GUI_ShowIconMenu &rArr; GUI_UpdateDisplay &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowIconMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Admin_QueryMenu
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Admin_LockersMenu
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Admin_BoxMenu
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Admin_ManageMenu
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AdminCardOpertion
</UL>

<P><STRONG><a name="[184]"></a>GUI_ShowMessage</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, app_gui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = GUI_ShowMessage &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PromptBox
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStr
</UL>
<BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTakes_OnlineAsk
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SuperCard_SetAdmin
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_AnyFingerOrCard
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_OnlineAsk
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_WriteCard
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_PreAuthorization
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_AnyCard
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_QueryMenu
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_ValidCard
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Registration
</UL>

<P><STRONG><a name="[1ad]"></a>GUI_ShowTowRowMessage</STRONG> (Thumb, 134 bytes, Stack size 32 bytes, app_gui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = GUI_ShowTowRowMessage &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PromptBox
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStr
</UL>
<BR>[Called By]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_QueryMenu
</UL>

<P><STRONG><a name="[1ae]"></a>GUI_ShowSysVersion</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, app_gui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = GUI_ShowSysVersion &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PromptBox
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStr
</UL>
<BR>[Called By]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_QueryMenu
</UL>

<P><STRONG><a name="[1af]"></a>GUI_ChoiceKeyboardType</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, app_gui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = GUI_ChoiceKeyboardType &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PromptBox
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStr
</UL>
<BR>[Called By]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_KeyboardType
</UL>

<P><STRONG><a name="[1b0]"></a>GUI_InputUseDate</STRONG> (Thumb, 52 bytes, Stack size 120 bytes, app_gui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = GUI_InputUseDate &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PromptBox
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStr
</UL>
<BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyInputDate
</UL>

<P><STRONG><a name="[1b1]"></a>GUI_InputBoxID</STRONG> (Thumb, 108 bytes, Stack size 128 bytes, app_gui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = GUI_InputBoxID &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UInt_To_Ascii
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PromptBox
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStr
</UL>
<BR>[Called By]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query_BoxRecord
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Unlockin_Box
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lockin_Box
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clean_OneBox
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open_OneBox
</UL>

<P><STRONG><a name="[1b2]"></a>GUI_AdminSetBoxNum</STRONG> (Thumb, 590 bytes, Stack size 40 bytes, app_gui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = GUI_AdminSetBoxNum &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UInt_To_Ascii
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PromptBox
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStr
</UL>
<BR>[Called By]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_BoxNum
</UL>

<P><STRONG><a name="[18b]"></a>GUI_Open1Box</STRONG> (Thumb, 180 bytes, Stack size 120 bytes, app_gui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = GUI_Open1Box &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PromptBox
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStr
</UL>
<BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTakes_OnlineAsk
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTakesWriteCard
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTakesByCardID
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lockers_TakeAwayByFinger
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_AnyFingerOrCard
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_AnyFinger
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_OnlineAsk
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_WriteCard
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_PreAuthorization
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_AnyCard
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clean_AllBox
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open_AllBox
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open_OneBox
</UL>

<P><STRONG><a name="[1b4]"></a>GUI_Open1BoxFaild</STRONG> (Thumb, 182 bytes, Stack size 120 bytes, app_gui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = GUI_Open1BoxFaild &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PromptBox
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStr
</UL>
<BR>[Called By]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open_AllBox
</UL>

<P><STRONG><a name="[1b5]"></a>GUI_BoxBeLocked</STRONG> (Thumb, 104 bytes, Stack size 112 bytes, app_gui.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PromptBox
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStr
</UL>

<P><STRONG><a name="[1b6]"></a>GUI_Time</STRONG> (Thumb, 262 bytes, Stack size 144 bytes, app_gui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352 + Unknown Stack Size
<LI>Call Chain = GUI_Time &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fill
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStr
</UL>
<BR>[Called By]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_OnStandby
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTime
</UL>

<P><STRONG><a name="[1b7]"></a>GUI_SetTime</STRONG> (Thumb, 236 bytes, Stack size 120 bytes, app_gui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 472 + Unknown Stack Size
<LI>Call Chain = GUI_SetTime &rArr; GUI_Time &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Time
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PromptBox
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStr
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_DateTime
</UL>

<P><STRONG><a name="[1b8]"></a>GUI_SetDebugMode</STRONG> (Thumb, 148 bytes, Stack size 112 bytes, app_gui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = GUI_SetDebugMode &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PromptBox
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStr
</UL>
<BR>[Called By]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_DebugMode
</UL>

<P><STRONG><a name="[1b9]"></a>GUI_SetBoxDoorCheckSwitch</STRONG> (Thumb, 148 bytes, Stack size 112 bytes, app_gui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = GUI_SetBoxDoorCheckSwitch &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PromptBox
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStr
</UL>
<BR>[Called By]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_BoxDoorStatusCheck
</UL>

<P><STRONG><a name="[1ba]"></a>GUI_SetIDCardSwitch</STRONG> (Thumb, 148 bytes, Stack size 112 bytes, app_gui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = GUI_SetIDCardSwitch &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PromptBox
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStr
</UL>
<BR>[Called By]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_IDCardSwitch
</UL>

<P><STRONG><a name="[1bb]"></a>GUI_SetWorkMode</STRONG> (Thumb, 72 bytes, Stack size 120 bytes, app_gui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 360 + Unknown Stack Size
<LI>Call Chain = GUI_SetWorkMode &rArr; GUI_ShowListMenu &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowListMenu
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStr
</UL>
<BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_WorkMode
</UL>

<P><STRONG><a name="[1bc]"></a>GUI_InputVoiceLevel</STRONG> (Thumb, 84 bytes, Stack size 112 bytes, app_gui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344 + Unknown Stack Size
<LI>Call Chain = GUI_InputVoiceLevel &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PromptBox
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStr
</UL>
<BR>[Called By]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_VoiceModuleLevel
</UL>

<P><STRONG><a name="[1bd]"></a>GUI_InputMachineNum</STRONG> (Thumb, 156 bytes, Stack size 120 bytes, app_gui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = GUI_InputMachineNum &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UInt_To_Ascii
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PromptBox
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStr
</UL>
<BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_MachineNum
</UL>

<P><STRONG><a name="[1be]"></a>GUI_SetNetSwitch</STRONG> (Thumb, 148 bytes, Stack size 112 bytes, app_gui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = GUI_SetNetSwitch &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PromptBox
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStr
</UL>
<BR>[Called By]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_NetSwitch
</UL>

<P><STRONG><a name="[1bf]"></a>GUI_ChoiceNetInfo</STRONG> (Thumb, 168 bytes, Stack size 8 bytes, app_gui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = GUI_ChoiceNetInfo &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PromptBox
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStr
</UL>
<BR>[Called By]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_TcpIpInfo
</UL>

<P><STRONG><a name="[1c0]"></a>GUI_InputIp</STRONG> (Thumb, 244 bytes, Stack size 120 bytes, app_gui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = GUI_InputIp &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPinfo_Hex2Ascii
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PromptBox
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStr
</UL>
<BR>[Called By]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_TcpIpInfo
</UL>

<P><STRONG><a name="[1c2]"></a>GUI_InputServerPort</STRONG> (Thumb, 158 bytes, Stack size 120 bytes, app_gui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = GUI_InputServerPort &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UInt_To_Ascii
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PromptBox
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStr
</UL>
<BR>[Called By]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_TcpIpInfo
</UL>

<P><STRONG><a name="[1c3]"></a>GUI_Registration</STRONG> (Thumb, 174 bytes, Stack size 120 bytes, app_gui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = GUI_Registration &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PromptBox
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStr
</UL>
<BR>[Called By]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Registration
</UL>

<P><STRONG><a name="[118]"></a>GUI_ShowNotice</STRONG> (Thumb, 642 bytes, Stack size 16 bytes, app_gui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = GUI_ShowNotice &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PromptBox
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStr
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_Login
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTakes_OnlineAsk
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SuperCard_SetAdmin
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSysConfig
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_OnlineAsk
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_PreAuthorization
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TopAdmin_Login
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TopAdmin_SetPassword
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Unlockin_Box
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lockin_Box
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clean_AllBox
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open_AllBox
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clr_AllValidCard
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_HandleTimeout
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PickUpAwaitTime
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PickUpTimeout
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_AllowOpenBoxNum
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_CardSector
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_LockersValidityDate
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_WorkMode
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_IDCardSwitch
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_BoxDoorStatusCheck
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_DebugMode
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_DeleteAdminCard
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_ClientIdCode
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_LockersName
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_AdminPassword
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Registration
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_TcpIpInfo
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_NetSwitch
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_MachineNum
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_VoiceModuleLevel
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_DateTime
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_BoxNum
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SysConfigInit
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_KeyboardType
</UL>

<P><STRONG><a name="[130]"></a>GUI_Admin</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, app_gui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = GUI_Admin &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowPartPic
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowFillPic
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fill
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStr
</UL>
<BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTakes_OnlineAsk
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTakesWriteCard
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTakesByCardID
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArgCardOperation
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lockers_TakeAwayByFinger
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyboardFunction
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleTimeoutAlert
</UL>

<P><STRONG><a name="[1c4]"></a>GUI_EmptyBoxCount</STRONG> (Thumb, 90 bytes, Stack size 112 bytes, app_gui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = GUI_EmptyBoxCount &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fill
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStr
</UL>
<BR>[Called By]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_OnStandby
</UL>

<P><STRONG><a name="[1c5]"></a>GUI_OnStandby</STRONG> (Thumb, 270 bytes, Stack size 8 bytes, app_gui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 360 + Unknown Stack Size
<LI>Call Chain = GUI_OnStandby &rArr; GUI_Time &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowPartPic
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fill
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EmptyBoxCount
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Time
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStr
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WorkStatus
</UL>

<P><STRONG><a name="[14a]"></a>GUI_WorkStatus</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, app_gui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = GUI_WorkStatus &rArr; GUI_OnStandby &rArr; GUI_Time &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_OnStandby
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1c6]"></a>GUI_ShowPassword</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, app_gui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = GUI_ShowPassword &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PromptBox
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStr
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_Login
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TopAdmin_Login
</UL>

<P><STRONG><a name="[1c7]"></a>GUI_ChangePassword</STRONG> (Thumb, 128 bytes, Stack size 120 bytes, app_gui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = GUI_ChangePassword &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PromptBox
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStr
</UL>
<BR>[Called By]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TopAdmin_SetPassword
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_AdminPassword
</UL>

<P><STRONG><a name="[1c8]"></a>GUI_InputName</STRONG> (Thumb, 178 bytes, Stack size 120 bytes, app_gui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = GUI_InputName &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PromptBox
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStr
</UL>
<BR>[Called By]<UL><LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_ClientIdCode
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_LockersName
</UL>

<P><STRONG><a name="[1c9]"></a>GUI_AddValidCard</STRONG> (Thumb, 298 bytes, Stack size 40 bytes, app_gui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = GUI_AddValidCard &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UInt_To_Ascii
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PromptBox
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStr
</UL>
<BR>[Called By]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_ValidCard
</UL>

<P><STRONG><a name="[1ca]"></a>GUI_AddCard2Box</STRONG> (Thumb, 484 bytes, Stack size 160 bytes, app_gui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 392 + Unknown Stack Size
<LI>Call Chain = GUI_AddCard2Box &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UInt_To_Ascii
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PromptBox
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStr
</UL>
<BR>[Called By]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_AddAdminCard
</UL>

<P><STRONG><a name="[1cb]"></a>GUI_ClrBoxNotice</STRONG> (Thumb, 164 bytes, Stack size 120 bytes, app_gui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = GUI_ClrBoxNotice &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PromptBox
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStr
</UL>
<BR>[Called By]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clean_AllBox
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clean_OneBox
</UL>

<P><STRONG><a name="[1cc]"></a>GUI_AskLockinBox</STRONG> (Thumb, 158 bytes, Stack size 128 bytes, app_gui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = GUI_AskLockinBox &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UInt_To_Ascii
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PromptBox
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStr
</UL>
<BR>[Called By]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lockin_Box
</UL>

<P><STRONG><a name="[1cd]"></a>GUI_AskUnlockinBox</STRONG> (Thumb, 226 bytes, Stack size 128 bytes, app_gui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = GUI_AskUnlockinBox &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UInt_To_Ascii
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PromptBox
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStr
</UL>
<BR>[Called By]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Unlockin_Box
</UL>

<P><STRONG><a name="[1ce]"></a>GUI_QueryBoxRecord</STRONG> (Thumb, 584 bytes, Stack size 184 bytes, app_gui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = GUI_QueryBoxRecord &rArr; GUI_PromptBigBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryBoxRecord
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PromptBigBox
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStr
</UL>
<BR>[Called By]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query_BoxRecord
</UL>

<P><STRONG><a name="[1cf]"></a>GUI_QueryLockBoxList</STRONG> (Thumb, 518 bytes, Stack size 248 bytes, app_gui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 480 + Unknown Stack Size
<LI>Call Chain = GUI_QueryLockBoxList &rArr; GUI_PromptBigBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PromptBigBox
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStr
</UL>
<BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query_LockBox
</UL>

<P><STRONG><a name="[1d0]"></a>GUI_QueryBoxStatusList</STRONG> (Thumb, 384 bytes, Stack size 136 bytes, app_gui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = GUI_QueryBoxStatusList &rArr; GUI_PromptBigBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PromptBigBox
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStr
</UL>
<BR>[Called By]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query_BoxStatus
</UL>

<P><STRONG><a name="[1d1]"></a>GUI_SetCardSector</STRONG> (Thumb, 188 bytes, Stack size 56 bytes, app_gui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = GUI_SetCardSector &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PromptBox
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStr
</UL>
<BR>[Called By]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_CardSector
</UL>

<P><STRONG><a name="[1d2]"></a>GUI_InputAllowOpenBoxNum</STRONG> (Thumb, 188 bytes, Stack size 56 bytes, app_gui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = GUI_InputAllowOpenBoxNum &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PromptBox
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStr
</UL>
<BR>[Called By]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_AllowOpenBoxNum
</UL>

<P><STRONG><a name="[1d3]"></a>GUI_SetPickUpAwaitTime</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, app_gui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = GUI_SetPickUpAwaitTime &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PromptBox
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStr
</UL>
<BR>[Called By]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PickUpAwaitTime
</UL>

<P><STRONG><a name="[1d4]"></a>GUI_SetPickUpTimeout</STRONG> (Thumb, 184 bytes, Stack size 32 bytes, app_gui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = GUI_SetPickUpTimeout &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PromptBox
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStr
</UL>
<BR>[Called By]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PickUpTimeout
</UL>

<P><STRONG><a name="[1d5]"></a>GUI_SetUIntValue</STRONG> (Thumb, 136 bytes, Stack size 40 bytes, app_gui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272 + Unknown Stack Size
<LI>Call Chain = GUI_SetUIntValue &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PromptBox
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStr
</UL>
<BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_HandleTimeout
</UL>

<P><STRONG><a name="[1d6]"></a>GUI_ChoiceAdminMenu</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, app_gui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = GUI_ChoiceAdminMenu &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PromptBox
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStr
</UL>
<BR>[Called By]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TopAdmin_SetPassword
</UL>

<P><STRONG><a name="[1d7]"></a>GUI_AdminCardOpertion</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, app_gui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = GUI_AdminCardOpertion &rArr; GUI_ShowMenu &rArr; GUI_ShowIconMenu &rArr; GUI_UpdateDisplay &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_AdminCard
</UL>

<P><STRONG><a name="[1d8]"></a>GUI_AdminMenu</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, app_gui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = GUI_AdminMenu &rArr; GUI_ShowIconMenu &rArr; GUI_UpdateDisplay &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowIconMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_LoginMenu
</UL>

<P><STRONG><a name="[1d9]"></a>GUI_Admin_SysSetMenu</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, app_gui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = GUI_Admin_SysSetMenu &rArr; GUI_ShowIconMenu &rArr; GUI_UpdateDisplay &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowIconMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_SysSetMenu
</UL>

<P><STRONG><a name="[1da]"></a>GUI_Admin_ManageMenu</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, app_gui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = GUI_Admin_ManageMenu &rArr; GUI_ShowMenu &rArr; GUI_ShowIconMenu &rArr; GUI_UpdateDisplay &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_ManageMenu
</UL>

<P><STRONG><a name="[1db]"></a>GUI_Admin_BoxMenu</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, app_gui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = GUI_Admin_BoxMenu &rArr; GUI_ShowMenu &rArr; GUI_ShowIconMenu &rArr; GUI_UpdateDisplay &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_BoxMenu
</UL>

<P><STRONG><a name="[1dc]"></a>GUI_Admin_LockersMenu</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, app_gui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = GUI_Admin_LockersMenu &rArr; GUI_ShowMenu &rArr; GUI_ShowIconMenu &rArr; GUI_UpdateDisplay &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_LockersMenu
</UL>

<P><STRONG><a name="[1dd]"></a>GUI_Admin_QueryMenu</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, app_gui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = GUI_Admin_QueryMenu &rArr; GUI_ShowMenu &rArr; GUI_ShowIconMenu &rArr; GUI_UpdateDisplay &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_QueryMenu
</UL>

<P><STRONG><a name="[1de]"></a>GUI_TopAdminMenu</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, app_gui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = GUI_TopAdminMenu &rArr; GUI_ShowIconMenu &rArr; GUI_UpdateDisplay &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowIconMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SuperAdmin_LoginMenu
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TopAdmin_LoginMenu
</UL>

<P><STRONG><a name="[1df]"></a>GUI_TopAdmin_SysSetMenu</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, app_gui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = GUI_TopAdmin_SysSetMenu &rArr; GUI_ShowIconMenu &rArr; GUI_UpdateDisplay &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowIconMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TopAdmin_SysSetMenu
</UL>

<P><STRONG><a name="[1e0]"></a>GUI_SuperAdmin_SysSetMenu</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, app_gui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = GUI_SuperAdmin_SysSetMenu &rArr; GUI_ShowIconMenu &rArr; GUI_UpdateDisplay &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowIconMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SuperAdmin_SysSetMenu
</UL>

<P><STRONG><a name="[12f]"></a>GUI_LockersNotice</STRONG> (Thumb, 912 bytes, Stack size 16 bytes, app_gui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = GUI_LockersNotice &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PromptBox
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStr
</UL>
<BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTakes_OnlineAsk
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTakesWriteCard
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTakesByCardID
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lockers_TakeAwayByFinger
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleTimeoutAlert
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_AnyFingerOrCard
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_AnyFinger
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_OnlineAsk
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_WriteCard
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_PreAuthorization
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_AnyCard
</UL>

<P><STRONG><a name="[1e1]"></a>GUI_PlsCloseBoxDoor</STRONG> (Thumb, 102 bytes, Stack size 112 bytes, app_gui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = GUI_PlsCloseBoxDoor &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PromptBox
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStr
</UL>
<BR>[Called By]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_AnyFingerOrCard
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_AnyFinger
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_OnlineAsk
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_WriteCard
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_PreAuthorization
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_AnyCard
</UL>

<P><STRONG><a name="[1e2]"></a>GUI_UserConsignFail</STRONG> (Thumb, 104 bytes, Stack size 112 bytes, app_gui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = GUI_UserConsignFail &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PromptBox
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStr
</UL>
<BR>[Called By]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_AnyFingerOrCard
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_AnyFinger
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_OnlineAsk
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_WriteCard
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_PreAuthorization
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_AnyCard
</UL>

<P><STRONG><a name="[18a]"></a>GUI_UserTakeAwwyFail</STRONG> (Thumb, 104 bytes, Stack size 112 bytes, app_gui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = GUI_UserTakeAwwyFail &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PromptBox
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStr
</UL>
<BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTakes_OnlineAsk
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTakesWriteCard
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTakesByCardID
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lockers_TakeAwayByFinger
</UL>

<P><STRONG><a name="[1e3]"></a>GUI_ShowIDPosition</STRONG> (Thumb, 508 bytes, Stack size 136 bytes, app_gui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = GUI_ShowIDPosition &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PromptBox
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStr
</UL>
<BR>[Called By]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_AnyFingerOrCard
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_OnlineAsk
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_WriteCard
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_PreAuthorization
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_AnyCard
</UL>

<P><STRONG><a name="[18e]"></a>GUI_PackageInOtherLockers</STRONG> (Thumb, 136 bytes, Stack size 136 bytes, app_gui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = GUI_PackageInOtherLockers &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PromptBox
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStr
</UL>
<BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTakes_OnlineAsk
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTakesWriteCard
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_OnlineAsk
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_WriteCard
</UL>

<P><STRONG><a name="[186]"></a>GUI_LockersParameters</STRONG> (Thumb, 164 bytes, Stack size 496 bytes, app_gui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 736 + Unknown Stack Size
<LI>Call Chain = GUI_LockersParameters &rArr; GUI_ShowListMenu &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowListMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArgCardOperation
</UL>

<P><STRONG><a name="[188]"></a>GUI_NetParameters</STRONG> (Thumb, 220 bytes, Stack size 504 bytes, app_gui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 744 + Unknown Stack Size
<LI>Call Chain = GUI_NetParameters &rArr; GUI_ShowListMenu &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowListMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArgCardOperation
</UL>

<P><STRONG><a name="[1e4]"></a>GUI_UserAccess</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, app_gui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = GUI_UserAccess &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PromptBox
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStr
</UL>
<BR>[Called By]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fingerprint_Login
</UL>

<P><STRONG><a name="[1f2]"></a>NumKeyToASCII</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, app_keyui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_ClientIdCode
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_LockersName
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Registration
</UL>

<P><STRONG><a name="[1e5]"></a>KeyChangeNumValue</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, app_keyui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = KeyChangeNumValue
</UL>
<BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NumKeyToNumValue
</UL>
<BR>[Called By]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query_BoxRecord
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Unlockin_Box
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lockin_Box
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clean_OneBox
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open_OneBox
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_HandleTimeout
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PickUpAwaitTime
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PickUpTimeout
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_AllowOpenBoxNum
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_CardSector
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_TcpIpInfo
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_MachineNum
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_VoiceModuleLevel
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_DateTime
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_BoxNum
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyInputDate
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyInputIpAddr
</UL>

<P><STRONG><a name="[1e7]"></a>KeyInputIpAddr</STRONG> (Thumb, 1128 bytes, Stack size 40 bytes, app_keyui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = KeyInputIpAddr &rArr; UInt_To_Ascii
</UL>
<BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UInt_To_Ascii
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyChangeNumValue
</UL>
<BR>[Called By]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_TcpIpInfo
</UL>

<P><STRONG><a name="[1e8]"></a>KeyInputDate</STRONG> (Thumb, 412 bytes, Stack size 16 bytes, app_keyui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = KeyInputDate &rArr; GUI_InputUseDate &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyChangeNumValue
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InputUseDate
</UL>
<BR>[Called By]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_LockersValidityDate
</UL>

<P><STRONG><a name="[1e9]"></a>Set_KeyboardType</STRONG> (Thumb, 160 bytes, Stack size 8 bytes, app_keyui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = Set_KeyboardType &rArr; GUI_ShowNotice &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowNotice
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_Parameters
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ChoiceKeyboardType
</UL>
<BR>[Called By]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SuperAdmin_SysSetMenu
</UL>

<P><STRONG><a name="[1ea]"></a>Set_SysConfigInit</STRONG> (Thumb, 118 bytes, Stack size 8 bytes, app_keyui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 432 + Unknown Stack Size
<LI>Call Chain = Set_SysConfigInit &rArr; SysConfig_Init &rArr; Init_LockersArg &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowNotice
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysConfig_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SuperAdmin_SysSetMenu
</UL>

<P><STRONG><a name="[1eb]"></a>Set_BoxNum</STRONG> (Thumb, 702 bytes, Stack size 8 bytes, app_keyui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = Set_BoxNum &rArr; GUI_AdminSetBoxNum &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateEmptyBoxList
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowNotice
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_Parameters
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyChangeNumValue
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AdminSetBoxNum
</UL>
<BR>[Called By]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SuperAdmin_SysSetMenu
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TopAdmin_SysSetMenu
</UL>

<P><STRONG><a name="[1ec]"></a>Set_DateTime</STRONG> (Thumb, 1186 bytes, Stack size 16 bytes, app_keyui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 488 + Unknown Stack Size
<LI>Call Chain = Set_DateTime &rArr; GUI_SetTime &rArr; GUI_Time &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDateTime
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Calc_Weekday
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chack_Time
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chack_Date
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowNotice
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyChangeNumValue
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTime
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_SysSetMenu
</UL>

<P><STRONG><a name="[1ed]"></a>Set_VoiceModuleLevel</STRONG> (Thumb, 192 bytes, Stack size 8 bytes, app_keyui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352 + Unknown Stack Size
<LI>Call Chain = Set_VoiceModuleLevel &rArr; GUI_InputVoiceLevel &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowNotice
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_Parameters
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyChangeNumValue
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InputVoiceLevel
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_SysSetMenu
</UL>

<P><STRONG><a name="[1ee]"></a>Set_MachineNum</STRONG> (Thumb, 166 bytes, Stack size 8 bytes, app_keyui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = Set_MachineNum &rArr; GUI_InputMachineNum &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowNotice
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_Parameters
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyChangeNumValue
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InputMachineNum
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_SysSetMenu
</UL>

<P><STRONG><a name="[1ef]"></a>Set_NetSwitch</STRONG> (Thumb, 188 bytes, Stack size 8 bytes, app_keyui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = Set_NetSwitch &rArr; GUI_SetNetSwitch &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowNotice
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_Parameters
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetNetSwitch
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_SysSetMenu
</UL>

<P><STRONG><a name="[1f0]"></a>Set_TcpIpInfo</STRONG> (Thumb, 696 bytes, Stack size 8 bytes, app_keyui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = Set_TcpIpInfo &rArr; GUI_InputServerPort &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowNotice
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_Parameters
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyInputIpAddr
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyChangeNumValue
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InputServerPort
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InputIp
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ChoiceNetInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_SysSetMenu
</UL>

<P><STRONG><a name="[1f1]"></a>Sys_Registration</STRONG> (Thumb, 462 bytes, Stack size 8 bytes, app_keyui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = Sys_Registration &rArr; GUI_Registration &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowMessage
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowNotice
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSysValidityDate
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckRegistrationCode
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NumKeyToASCII
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Registration
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_SysSetMenu
</UL>

<P><STRONG><a name="[1f3]"></a>Set_AdminPassword</STRONG> (Thumb, 300 bytes, Stack size 8 bytes, app_keyui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = Set_AdminPassword &rArr; GUI_ChangePassword &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowNotice
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_Parameters
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ChangePassword
</UL>
<BR>[Called By]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_ManageMenu
</UL>

<P><STRONG><a name="[1f4]"></a>Set_LockersName</STRONG> (Thumb, 424 bytes, Stack size 8 bytes, app_keyui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = Set_LockersName &rArr; GUI_InputName &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowNotice
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_Parameters
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NumKeyToASCII
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InputName
</UL>
<BR>[Called By]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_ManageMenu
</UL>

<P><STRONG><a name="[1f5]"></a>Set_ClientIdCode</STRONG> (Thumb, 440 bytes, Stack size 8 bytes, app_keyui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = Set_ClientIdCode &rArr; GUI_InputName &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowNotice
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_Parameters
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NumKeyToASCII
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InputName
</UL>
<BR>[Called By]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_ManageMenu
</UL>

<P><STRONG><a name="[1f6]"></a>Set_AddAdminCard</STRONG> (Thumb, 462 bytes, Stack size 16 bytes, app_keyui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408 + Unknown Stack Size
<LI>Call Chain = Set_AddAdminCard &rArr; GUI_AddCard2Box &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_IC_ID_CardSN
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_Parameters
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddCard2Box
</UL>
<BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_AdminCard
</UL>

<P><STRONG><a name="[1f7]"></a>Set_DeleteAdminCard</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, app_keyui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = Set_DeleteAdminCard &rArr; GUI_ShowNotice &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowNotice
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_Parameters
</UL>
<BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_AdminCard
</UL>

<P><STRONG><a name="[1f8]"></a>Set_AdminCard</STRONG> (Thumb, 196 bytes, Stack size 8 bytes, app_keyui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = Set_AdminCard &rArr; Set_AddAdminCard &rArr; GUI_AddCard2Box &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_DeleteAdminCard
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_AddAdminCard
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AdminCardOpertion
</UL>
<BR>[Called By]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TopAdmin_SysSetMenu
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_ManageMenu
</UL>

<P><STRONG><a name="[1f9]"></a>Set_DebugMode</STRONG> (Thumb, 188 bytes, Stack size 8 bytes, app_keyui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = Set_DebugMode &rArr; GUI_SetDebugMode &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowNotice
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_Parameters
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDebugMode
</UL>
<BR>[Called By]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TopAdmin_SysSetMenu
</UL>

<P><STRONG><a name="[1fa]"></a>Set_BoxDoorStatusCheck</STRONG> (Thumb, 196 bytes, Stack size 8 bytes, app_keyui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = Set_BoxDoorStatusCheck &rArr; GUI_SetBoxDoorCheckSwitch &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowNotice
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_Parameters
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBoxDoorCheckSwitch
</UL>
<BR>[Called By]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TopAdmin_SysSetMenu
</UL>

<P><STRONG><a name="[1fb]"></a>Set_IDCardSwitch</STRONG> (Thumb, 196 bytes, Stack size 8 bytes, app_keyui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = Set_IDCardSwitch &rArr; GUI_SetIDCardSwitch &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowNotice
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_Parameters
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetIDCardSwitch
</UL>
<BR>[Called By]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TopAdmin_SysSetMenu
</UL>

<P><STRONG><a name="[1fc]"></a>Set_WorkMode</STRONG> (Thumb, 184 bytes, Stack size 8 bytes, app_keyui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = Set_WorkMode &rArr; GUI_SetWorkMode &rArr; GUI_ShowListMenu &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowNotice
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_Parameters
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetWorkMode
</UL>
<BR>[Called By]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TopAdmin_SysSetMenu
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_SysSetMenu
</UL>

<P><STRONG><a name="[1fd]"></a>Set_LockersValidityDate</STRONG> (Thumb, 174 bytes, Stack size 16 bytes, app_keyui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 384 + Unknown Stack Size
<LI>Call Chain = Set_LockersValidityDate &rArr; KeyInputDate &rArr; GUI_InputUseDate &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowNotice
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_Parameters
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyInputDate
</UL>
<BR>[Called By]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SuperAdmin_SysSetMenu
</UL>

<P><STRONG><a name="[1fe]"></a>Set_CardSector</STRONG> (Thumb, 210 bytes, Stack size 8 bytes, app_keyui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296 + Unknown Stack Size
<LI>Call Chain = Set_CardSector &rArr; GUI_SetCardSector &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowNotice
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_Parameters
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyChangeNumValue
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetCardSector
</UL>
<BR>[Called By]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_ManageMenu
</UL>

<P><STRONG><a name="[1ff]"></a>Set_AllowOpenBoxNum</STRONG> (Thumb, 190 bytes, Stack size 8 bytes, app_keyui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296 + Unknown Stack Size
<LI>Call Chain = Set_AllowOpenBoxNum &rArr; GUI_InputAllowOpenBoxNum &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowNotice
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_Parameters
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyChangeNumValue
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InputAllowOpenBoxNum
</UL>
<BR>[Called By]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_LockersMenu
</UL>

<P><STRONG><a name="[200]"></a>Set_PickUpTimeout</STRONG> (Thumb, 188 bytes, Stack size 8 bytes, app_keyui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272 + Unknown Stack Size
<LI>Call Chain = Set_PickUpTimeout &rArr; GUI_SetPickUpTimeout &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowNotice
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_Parameters
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyChangeNumValue
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPickUpTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_LockersMenu
</UL>

<P><STRONG><a name="[201]"></a>Set_PickUpAwaitTime</STRONG> (Thumb, 190 bytes, Stack size 8 bytes, app_keyui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272 + Unknown Stack Size
<LI>Call Chain = Set_PickUpAwaitTime &rArr; GUI_SetPickUpAwaitTime &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowNotice
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_Parameters
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyChangeNumValue
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPickUpAwaitTime
</UL>
<BR>[Called By]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_LockersMenu
</UL>

<P><STRONG><a name="[202]"></a>Set_HandleTimeout</STRONG> (Thumb, 390 bytes, Stack size 8 bytes, app_keyui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = Set_HandleTimeout &rArr; GUI_SetUIntValue &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowNotice
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_Parameters
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyChangeNumValue
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetUIntValue
</UL>
<BR>[Called By]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_LockersMenu
</UL>

<P><STRONG><a name="[203]"></a>Add_ValidCard</STRONG> (Thumb, 342 bytes, Stack size 16 bytes, app_keyui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = Add_ValidCard &rArr; GUI_AddValidCard &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowMessage
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddOneValidCardNum
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_IC_ID_CardSN
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddValidCard
</UL>
<BR>[Called By]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_ManageMenu
</UL>

<P><STRONG><a name="[204]"></a>Clr_AllValidCard</STRONG> (Thumb, 194 bytes, Stack size 16 bytes, app_keyui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = Clr_AllValidCard &rArr; GUI_ShowNotice &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Feed
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EE_BufferWrite
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowNotice
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_Parameters
</UL>
<BR>[Called By]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_ManageMenu
</UL>

<P><STRONG><a name="[205]"></a>Open_OneBox</STRONG> (Thumb, 232 bytes, Stack size 8 bytes, app_keyui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = Open_OneBox &rArr; SelectOneBoxToOpen &rArr; Choice1BoxOpen_CheckResult &rArr; ScanExtendBoxStatus &rArr; SendCmdToExtendLockers &rArr; delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Open1Box
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreOpenBoxRecord
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectOneBoxToOpen
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyChangeNumValue
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InputBoxID
</UL>
<BR>[Called By]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_BoxMenu
</UL>

<P><STRONG><a name="[206]"></a>Open_AllBox</STRONG> (Thumb, 322 bytes, Stack size 16 bytes, app_keyui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = Open_AllBox &rArr; SelectOneBoxToOpen &rArr; Choice1BoxOpen_CheckResult &rArr; ScanExtendBoxStatus &rArr; SendCmdToExtendLockers &rArr; delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Get_KeyDown
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Open1Box
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreOpenBoxRecord
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectOneBoxToOpen
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowNotice
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Open1BoxFaild
</UL>
<BR>[Called By]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_BoxMenu
</UL>

<P><STRONG><a name="[207]"></a>Clean_OneBox</STRONG> (Thumb, 402 bytes, Stack size 16 bytes, app_keyui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 384 + Unknown Stack Size
<LI>Call Chain = Clean_OneBox &rArr; SelectOneBoxToOpen &rArr; Choice1BoxOpen_CheckResult &rArr; ScanExtendBoxStatus &rArr; SendCmdToExtendLockers &rArr; delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreOpenBoxRecord
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateEmptyBoxList
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectOneBoxToOpen
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_Parameters
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCmdToFingerprint_DeletChar
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyChangeNumValue
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClrBoxNotice
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InputBoxID
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStr
</UL>
<BR>[Called By]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_BoxMenu
</UL>

<P><STRONG><a name="[209]"></a>Clean_AllBox</STRONG> (Thumb, 350 bytes, Stack size 16 bytes, app_keyui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 384 + Unknown Stack Size
<LI>Call Chain = Clean_AllBox &rArr; SelectOneBoxToOpen &rArr; Choice1BoxOpen_CheckResult &rArr; ScanExtendBoxStatus &rArr; SendCmdToExtendLockers &rArr; delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Feed
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Get_KeyDown
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Open1Box
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreOpenBoxRecord
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateEmptyBoxList
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectOneBoxToOpen
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowNotice
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_Parameters
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCmdToFingerprint_Empty
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCmdToFingerprint_DeletChar
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClrBoxNotice
</UL>
<BR>[Called By]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_BoxMenu
</UL>

<P><STRONG><a name="[20b]"></a>Lockin_Box</STRONG> (Thumb, 570 bytes, Stack size 16 bytes, app_keyui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = Lockin_Box &rArr; GUI_AskLockinBox &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Feed
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateEmptyBoxList
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowNotice
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_Parameters
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyChangeNumValue
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AskLockinBox
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InputBoxID
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStr
</UL>
<BR>[Called By]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_BoxMenu
</UL>

<P><STRONG><a name="[20c]"></a>Unlockin_Box</STRONG> (Thumb, 544 bytes, Stack size 16 bytes, app_keyui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = Unlockin_Box &rArr; GUI_AskUnlockinBox &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Feed
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateEmptyBoxList
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowNotice
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_Parameters
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyChangeNumValue
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AskUnlockinBox
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InputBoxID
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStr
</UL>
<BR>[Called By]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_BoxMenu
</UL>

<P><STRONG><a name="[20d]"></a>Query_BoxRecord</STRONG> (Thumb, 304 bytes, Stack size 8 bytes, app_keyui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424 + Unknown Stack Size
<LI>Call Chain = Query_BoxRecord &rArr; GUI_QueryBoxRecord &rArr; GUI_PromptBigBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyChangeNumValue
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_QueryBoxRecord
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InputBoxID
</UL>
<BR>[Called By]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_QueryMenu
</UL>

<P><STRONG><a name="[20e]"></a>Query_LockBox</STRONG> (Thumb, 220 bytes, Stack size 8 bytes, app_keyui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 488 + Unknown Stack Size
<LI>Call Chain = Query_LockBox &rArr; GUI_QueryLockBoxList &rArr; GUI_PromptBigBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_QueryLockBoxList
</UL>
<BR>[Called By]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_QueryMenu
</UL>

<P><STRONG><a name="[20f]"></a>Query_BoxStatus</STRONG> (Thumb, 162 bytes, Stack size 8 bytes, app_keyui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 376 + Unknown Stack Size
<LI>Call Chain = Query_BoxStatus &rArr; GUI_QueryBoxStatusList &rArr; GUI_PromptBigBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_QueryBoxStatusList
</UL>
<BR>[Called By]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_QueryMenu
</UL>

<P><STRONG><a name="[210]"></a>TopAdmin_SetPassword</STRONG> (Thumb, 596 bytes, Stack size 8 bytes, app_keyui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = TopAdmin_SetPassword &rArr; GUI_ChangePassword &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowNotice
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_Parameters
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ChoiceAdminMenu
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ChangePassword
</UL>
<BR>[Called By]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SuperAdmin_SysSetMenu
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TopAdmin_SysSetMenu
</UL>

<P><STRONG><a name="[211]"></a>Admin_SysSetMenu</STRONG> (Thumb, 260 bytes, Stack size 8 bytes, app_keyui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 496 + Unknown Stack Size
<LI>Call Chain = Admin_SysSetMenu &rArr; Set_DateTime &rArr; GUI_SetTime &rArr; GUI_Time &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_WorkMode
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Registration
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_TcpIpInfo
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_NetSwitch
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_MachineNum
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_VoiceModuleLevel
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_DateTime
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Admin_SysSetMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_LoginMenu
</UL>

<P><STRONG><a name="[212]"></a>Admin_ManageMenu</STRONG> (Thumb, 264 bytes, Stack size 8 bytes, app_keyui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424 + Unknown Stack Size
<LI>Call Chain = Admin_ManageMenu &rArr; Set_AdminCard &rArr; Set_AddAdminCard &rArr; GUI_AddCard2Box &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clr_AllValidCard
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_ValidCard
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_CardSector
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_AdminCard
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_ClientIdCode
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_LockersName
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_AdminPassword
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Admin_ManageMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_LoginMenu
</UL>

<P><STRONG><a name="[213]"></a>Admin_BoxMenu</STRONG> (Thumb, 244 bytes, Stack size 8 bytes, app_keyui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 392 + Unknown Stack Size
<LI>Call Chain = Admin_BoxMenu &rArr; Clean_AllBox &rArr; SelectOneBoxToOpen &rArr; Choice1BoxOpen_CheckResult &rArr; ScanExtendBoxStatus &rArr; SendCmdToExtendLockers &rArr; delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Unlockin_Box
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lockin_Box
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clean_AllBox
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clean_OneBox
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open_AllBox
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open_OneBox
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Admin_BoxMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_LoginMenu
</UL>

<P><STRONG><a name="[214]"></a>Admin_LockersMenu</STRONG> (Thumb, 214 bytes, Stack size 8 bytes, app_keyui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304 + Unknown Stack Size
<LI>Call Chain = Admin_LockersMenu &rArr; Set_AllowOpenBoxNum &rArr; GUI_InputAllowOpenBoxNum &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_HandleTimeout
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PickUpAwaitTime
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PickUpTimeout
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_AllowOpenBoxNum
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Admin_LockersMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_LoginMenu
</UL>

<P><STRONG><a name="[215]"></a>Admin_QueryMenu</STRONG> (Thumb, 410 bytes, Stack size 8 bytes, app_keyui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 496 + Unknown Stack Size
<LI>Call Chain = Admin_QueryMenu &rArr; Query_LockBox &rArr; GUI_QueryLockBoxList &rArr; GUI_PromptBigBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowMessage
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query_BoxStatus
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query_LockBox
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query_BoxRecord
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Admin_QueryMenu
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowSysVersion
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowTowRowMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_LoginMenu
</UL>

<P><STRONG><a name="[216]"></a>Admin_LoginMenu</STRONG> (Thumb, 242 bytes, Stack size 8 bytes, app_keyui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 504 + Unknown Stack Size
<LI>Call Chain = Admin_LoginMenu &rArr; Admin_QueryMenu &rArr; Query_LockBox &rArr; GUI_QueryLockBoxList &rArr; GUI_PromptBigBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_QueryMenu
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_LockersMenu
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_BoxMenu
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_ManageMenu
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_SysSetMenu
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AdminMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyboardFunction
</UL>

<P><STRONG><a name="[182]"></a>Admin_Login</STRONG> (Thumb, 508 bytes, Stack size 16 bytes, app_keyui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = Admin_Login &rArr; GUI_ShowPassword &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowNotice
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_Play
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowPassword
</UL>
<BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdminCard_Login
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyboardFunction
</UL>

<P><STRONG><a name="[217]"></a>TopAdmin_Login</STRONG> (Thumb, 432 bytes, Stack size 8 bytes, app_keyui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272 + Unknown Stack Size
<LI>Call Chain = TopAdmin_Login &rArr; GUI_ShowPassword &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowNotice
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_Play
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowPassword
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyboardFunction
</UL>

<P><STRONG><a name="[218]"></a>TopAdmin_SysSetMenu</STRONG> (Thumb, 258 bytes, Stack size 8 bytes, app_keyui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424 + Unknown Stack Size
<LI>Call Chain = TopAdmin_SysSetMenu &rArr; Set_AdminCard &rArr; Set_AddAdminCard &rArr; GUI_AddCard2Box &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TopAdmin_SetPassword
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_WorkMode
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_IDCardSwitch
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_BoxDoorStatusCheck
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_DebugMode
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_AdminCard
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_BoxNum
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TopAdmin_SysSetMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TopAdmin_LoginMenu
</UL>

<P><STRONG><a name="[219]"></a>TopAdmin_LoginMenu</STRONG> (Thumb, 144 bytes, Stack size 8 bytes, app_keyui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 432 + Unknown Stack Size
<LI>Call Chain = TopAdmin_LoginMenu &rArr; TopAdmin_SysSetMenu &rArr; Set_AdminCard &rArr; Set_AddAdminCard &rArr; GUI_AddCard2Box &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TopAdmin_SysSetMenu
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TopAdminMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyboardFunction
</UL>

<P><STRONG><a name="[21a]"></a>SuperAdmin_SysSetMenu</STRONG> (Thumb, 232 bytes, Stack size 8 bytes, app_keyui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 440 + Unknown Stack Size
<LI>Call Chain = SuperAdmin_SysSetMenu &rArr; Set_SysConfigInit &rArr; SysConfig_Init &rArr; Init_LockersArg &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TopAdmin_SetPassword
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_LockersValidityDate
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_BoxNum
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SysConfigInit
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_KeyboardType
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SuperAdmin_SysSetMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SuperAdmin_LoginMenu
</UL>

<P><STRONG><a name="[21b]"></a>SuperAdmin_LoginMenu</STRONG> (Thumb, 144 bytes, Stack size 8 bytes, app_keyui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 448 + Unknown Stack Size
<LI>Call Chain = SuperAdmin_LoginMenu &rArr; SuperAdmin_SysSetMenu &rArr; Set_SysConfigInit &rArr; SysConfig_Init &rArr; Init_LockersArg &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SuperAdmin_SysSetMenu
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TopAdminMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyboardFunction
</UL>

<P><STRONG><a name="[147]"></a>KeyboardFunction</STRONG> (Thumb, 408 bytes, Stack size 8 bytes, app_keyui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 864 + Unknown Stack Size
<LI>Call Chain = KeyboardFunction &rArr; ArgCardOperation &rArr; GUI_NetParameters &rArr; GUI_ShowListMenu &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NumKeyToNumValue
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Get_KeyDown
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_Login
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArgCardOperation
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardOperation
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Admin
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_Consign
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SuperAdmin_LoginMenu
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TopAdmin_LoginMenu
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TopAdmin_Login
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_LoginMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[148]"></a>DepositKeyDown</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, app_keyui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DepositKeyDown &rArr; delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[21d]"></a>UserConsign_OnlineAsk</STRONG> (Thumb, 46 bytes, Stack size 72 bytes, app_lockers.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = UserConsign_OnlineAsk &rArr; Comm_ApplyFor &rArr; UdpServer_SendData &rArr; udp_transmit &rArr; put_ethernet &rArr; encWrite &rArr; encSetBank &rArr; encWriteOp
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_ApplyFor
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_OnlineAsk
</UL>

<P><STRONG><a name="[190]"></a>UserTakeAway_OnlineAsk</STRONG> (Thumb, 46 bytes, Stack size 72 bytes, app_lockers.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = UserTakeAway_OnlineAsk &rArr; Comm_ApplyFor &rArr; UdpServer_SendData &rArr; udp_transmit &rArr; put_ethernet &rArr; encWrite &rArr; encSetBank &rArr; encWriteOp
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_ApplyFor
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTakes_OnlineAsk
</UL>

<P><STRONG><a name="[21e]"></a>UserConsign_ServerReply</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, app_lockers.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UserConsign_ServerReply
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServerReply_CommHandle
</UL>

<P><STRONG><a name="[178]"></a>ServerReply_CommHandle</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, app_lockers.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ServerReply_CommHandle &rArr; UserConsign_ServerReply
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserConsign_ServerReply
</UL>
<BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Thread_CommHandle
</UL>

<P><STRONG><a name="[21f]"></a>ConsignMode_AnyCard</STRONG> (Thumb, 1144 bytes, Stack size 24 bytes, app_lockers.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 392 + Unknown Stack Size
<LI>Call Chain = ConsignMode_AnyCard &rArr; SelectOneBoxToOpen &rArr; Choice1BoxOpen_CheckResult &rArr; ScanExtendBoxStatus &rArr; SendCmdToExtendLockers &rArr; delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Feed
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowMessage
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Open1Box
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_IC_ID_CardSN
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreRecord_OpenBoxByCard
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_LockersNotice
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoicePlay_xBoxOpen
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoicePlay_DoorNotClose
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteOneEmptyBox
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectOneBoxToOpen
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_Parameters
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_Play
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowIDPosition
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UserConsignFail
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PlsCloseBoxDoor
</UL>
<BR>[Called By]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_Consign
</UL>

<P><STRONG><a name="[221]"></a>ConsignMode_PreAuthorization</STRONG> (Thumb, 1182 bytes, Stack size 24 bytes, app_lockers.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 392 + Unknown Stack Size
<LI>Call Chain = ConsignMode_PreAuthorization &rArr; SelectOneBoxToOpen &rArr; Choice1BoxOpen_CheckResult &rArr; ScanExtendBoxStatus &rArr; SendCmdToExtendLockers &rArr; delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Feed
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowMessage
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Open1Box
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckCardValid
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_IC_ID_CardSN
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreRecord_OpenBoxByCard
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_LockersNotice
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoicePlay_xBoxOpen
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoicePlay_DoorNotClose
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteOneEmptyBox
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectOneBoxToOpen
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowNotice
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_Parameters
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_Play
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowIDPosition
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UserConsignFail
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PlsCloseBoxDoor
</UL>
<BR>[Called By]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_Consign
</UL>

<P><STRONG><a name="[222]"></a>ConsignMode_WriteCard</STRONG> (Thumb, 2054 bytes, Stack size 32 bytes, app_lockers.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 400 + Unknown Stack Size
<LI>Call Chain = ConsignMode_WriteCard &rArr; GUI_PackageInOtherLockers &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Feed
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowMessage
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PackageInOtherLockers
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Open1Box
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_IC_ID_CardSN
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreRecord_OpenBoxByCard
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_LockersNotice
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoicePlay_xBoxOpen
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoicePlay_DoorNotClose
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckValidityDate
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteOneEmptyBox
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectOneBoxToOpen
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Calc_CRC
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_Parameters
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_ReadCard
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_WriteCard_1Block
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_Play
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowIDPosition
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UserConsignFail
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PlsCloseBoxDoor
</UL>
<BR>[Called By]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_Consign
</UL>

<P><STRONG><a name="[224]"></a>ConsignMode_OnlineAsk</STRONG> (Thumb, 1388 bytes, Stack size 24 bytes, app_lockers.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 392 + Unknown Stack Size
<LI>Call Chain = ConsignMode_OnlineAsk &rArr; GUI_PackageInOtherLockers &rArr; GUI_PromptBox &rArr; LCD_DisplayStr &rArr; DisplayString &rArr; Show_Font &rArr; Get_HzMat &rArr; ZiKu_GetChineseChar
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Feed
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowMessage
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PackageInOtherLockers
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Open1Box
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_IC_ID_CardSN
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreRecord_OpenBoxByCard
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_LockersNotice
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoicePlay_xBoxOpen
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoicePlay_DoorNotClose
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteOneEmptyBox
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectOneBoxToOpen
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowNotice
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_Parameters
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_Play
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserConsign_OnlineAsk
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowIDPosition
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UserConsignFail
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PlsCloseBoxDoor
</UL>
<BR>[Called By]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_Consign
</UL>

<P><STRONG><a name="[225]"></a>ConsignMode_AnyFinger</STRONG> (Thumb, 984 bytes, Stack size 24 bytes, app_lockers.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 392 + Unknown Stack Size
<LI>Call Chain = ConsignMode_AnyFinger &rArr; SelectOneBoxToOpen &rArr; Choice1BoxOpen_CheckResult &rArr; ScanExtendBoxStatus &rArr; SendCmdToExtendLockers &rArr; delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Open1Box
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreRecord_OpenBoxByFinger
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreRecord_OpenBoxByCard
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_LockersNotice
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoicePlay_xBoxOpen
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoicePlay_DoorNotClose
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteOneEmptyBox
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectOneBoxToOpen
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_Parameters
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_Play
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fingerprint_Login
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCmdToFingerprint_DeletChar
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UserConsignFail
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PlsCloseBoxDoor
</UL>
<BR>[Called By]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_Consign
</UL>

<P><STRONG><a name="[227]"></a>ConsignMode_AnyFingerOrCard</STRONG> (Thumb, 1324 bytes, Stack size 32 bytes, app_lockers.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 400 + Unknown Stack Size
<LI>Call Chain = ConsignMode_AnyFingerOrCard &rArr; SelectOneBoxToOpen &rArr; Choice1BoxOpen_CheckResult &rArr; ScanExtendBoxStatus &rArr; SendCmdToExtendLockers &rArr; delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Feed
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowMessage
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Open1Box
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_IC_ID_CardSN
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreRecord_OpenBoxByFinger
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreRecord_OpenBoxByCard
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_LockersNotice
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoicePlay_xBoxOpen
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoicePlay_DoorNotClose
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteOneEmptyBox
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectOneBoxToOpen
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_Parameters
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_Play
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fingerprint_Login
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCmdToFingerprint_DeletChar
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowIDPosition
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UserConsignFail
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PlsCloseBoxDoor
</UL>
<BR>[Called By]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_Consign
</UL>

<P><STRONG><a name="[21c]"></a>User_Consign</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, app_lockers.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408 + Unknown Stack Size
<LI>Call Chain = User_Consign &rArr; ConsignMode_AnyFingerOrCard &rArr; SelectOneBoxToOpen &rArr; Choice1BoxOpen_CheckResult &rArr; ScanExtendBoxStatus &rArr; SendCmdToExtendLockers &rArr; delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_AnyFingerOrCard
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_AnyFinger
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_OnlineAsk
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_WriteCard
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_PreAuthorization
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_AnyCard
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyboardFunction
</UL>

<P><STRONG><a name="[149]"></a>Lockers_TakeAwayByFinger</STRONG> (Thumb, 1160 bytes, Stack size 24 bytes, app_lockers.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 392 + Unknown Stack Size
<LI>Call Chain = Lockers_TakeAwayByFinger &rArr; SelectOneBoxToOpen &rArr; Choice1BoxOpen_CheckResult &rArr; ScanExtendBoxStatus &rArr; SendCmdToExtendLockers &rArr; delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UserTakeAwwyFail
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Open1Box
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreRecord_OpenBoxByFinger
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_LockersNotice
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Admin
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoicePlay_xBoxOpen
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddOneEmptyBox
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectOneBoxToOpen
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_Parameters
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_Play
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fingerprint_Search
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCmdToFingerprint_DeletChar
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[143]"></a>Fingerprint_Init</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, app_fingerprint.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
</UL>

<P><STRONG><a name="[229]"></a>SendDataToFingerprint</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, app_fingerprint.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_SendNxByte
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[22a]"></a>SendCmdToFingerprint</STRONG> (Thumb, 268 bytes, Stack size 288 bytes, app_fingerprint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296 + Unknown Stack Size
<LI>Call Chain = SendCmdToFingerprint &rArr; UART1_SendNxByte
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_SendNxByte
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fingerprint_GetChar
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCmdToFingerprint_Search
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCmdToFingerprint_Store
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCmdToFingerprint_RegModel
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCmdToFingerprint_GenChar
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCmdToFingerprint_GetImg
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCmdToFingerprint_Empty
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCmdToFingerprint_DeletChar
</UL>

<P><STRONG><a name="[231]"></a>CheckFingerprintReply</STRONG> (Thumb, 180 bytes, Stack size 20 bytes, app_fingerprint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = CheckFingerprintReply
</UL>
<BR>[Called By]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fingerprint_Search
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fingerprint_Login
</UL>

<P><STRONG><a name="[22b]"></a>AwaitingerprintResult</STRONG> (Thumb, 200 bytes, Stack size 24 bytes, app_fingerprint.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fingerprint_GetChar
</UL>

<P><STRONG><a name="[22c]"></a>SendCmdToFingerprint_GetImg</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, app_fingerprint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312 + Unknown Stack Size
<LI>Call Chain = SendCmdToFingerprint_GetImg &rArr; SendCmdToFingerprint &rArr; UART1_SendNxByte
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCmdToFingerprint
</UL>
<BR>[Called By]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fingerprint_Search
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fingerprint_Login
</UL>

<P><STRONG><a name="[22d]"></a>SendCmdToFingerprint_GenChar</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, app_fingerprint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = SendCmdToFingerprint_GenChar &rArr; SendCmdToFingerprint &rArr; UART1_SendNxByte
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCmdToFingerprint
</UL>
<BR>[Called By]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fingerprint_Search
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fingerprint_Login
</UL>

<P><STRONG><a name="[22e]"></a>SendCmdToFingerprint_RegModel</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, app_fingerprint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312 + Unknown Stack Size
<LI>Call Chain = SendCmdToFingerprint_RegModel &rArr; SendCmdToFingerprint &rArr; UART1_SendNxByte
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCmdToFingerprint
</UL>
<BR>[Called By]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fingerprint_Login
</UL>

<P><STRONG><a name="[22f]"></a>SendCmdToFingerprint_Store</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, app_fingerprint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = SendCmdToFingerprint_Store &rArr; SendCmdToFingerprint &rArr; UART1_SendNxByte
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCmdToFingerprint
</UL>
<BR>[Called By]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fingerprint_Login
</UL>

<P><STRONG><a name="[208]"></a>SendCmdToFingerprint_DeletChar</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, app_fingerprint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = SendCmdToFingerprint_DeletChar &rArr; SendCmdToFingerprint &rArr; UART1_SendNxByte
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCmdToFingerprint
</UL>
<BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lockers_TakeAwayByFinger
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_AnyFingerOrCard
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_AnyFinger
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clean_AllBox
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clean_OneBox
</UL>

<P><STRONG><a name="[20a]"></a>SendCmdToFingerprint_Empty</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, app_fingerprint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312 + Unknown Stack Size
<LI>Call Chain = SendCmdToFingerprint_Empty &rArr; SendCmdToFingerprint &rArr; UART1_SendNxByte
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCmdToFingerprint
</UL>
<BR>[Called By]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clean_AllBox
</UL>

<P><STRONG><a name="[230]"></a>SendCmdToFingerprint_Search</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, app_fingerprint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328 + Unknown Stack Size
<LI>Call Chain = SendCmdToFingerprint_Search &rArr; SendCmdToFingerprint &rArr; UART1_SendNxByte
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCmdToFingerprint
</UL>
<BR>[Called By]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fingerprint_Search
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fingerprint_Login
</UL>

<P><STRONG><a name="[228]"></a>Fingerprint_Search</STRONG> (Thumb, 454 bytes, Stack size 16 bytes, app_fingerprint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344 + Unknown Stack Size
<LI>Call Chain = Fingerprint_Search &rArr; SendCmdToFingerprint_Search &rArr; SendCmdToFingerprint &rArr; UART1_SendNxByte
</UL>
<BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCmdToFingerprint_Search
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCmdToFingerprint_GenChar
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCmdToFingerprint_GetImg
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckFingerprintReply
</UL>
<BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lockers_TakeAwayByFinger
</UL>

<P><STRONG><a name="[226]"></a>Fingerprint_Login</STRONG> (Thumb, 1190 bytes, Stack size 16 bytes, app_fingerprint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344 + Unknown Stack Size
<LI>Call Chain = Fingerprint_Login &rArr; SendCmdToFingerprint_Search &rArr; SendCmdToFingerprint &rArr; UART1_SendNxByte
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voice_Play
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCmdToFingerprint_Search
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCmdToFingerprint_Store
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCmdToFingerprint_RegModel
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCmdToFingerprint_GenChar
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCmdToFingerprint_GetImg
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckFingerprintReply
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UserAccess
</UL>
<BR>[Called By]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_AnyFingerOrCard
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_AnyFinger
</UL>

<P><STRONG><a name="[232]"></a>Fingerprint_GetChar</STRONG> (Thumb, 214 bytes, Stack size 32 bytes, app_fingerprint.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AwaitingerprintResult
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCmdToFingerprint
</UL>

<P><STRONG><a name="[109]"></a>__2sprintf</STRONG> (Thumb, 34 bytes, Stack size 32 bytes, noretval__2sprintf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PackageInOtherLockers
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_NetParameters
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_LockersParameters
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LockersArg
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_QueryMenu
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_DateTime
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyInputDate
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowIDPosition
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetUIntValue
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPickUpTimeout
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPickUpAwaitTime
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InputAllowOpenBoxNum
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetCardSector
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_QueryBoxStatusList
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_QueryLockBoxList
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_QueryBoxRecord
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddCard2Box
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EmptyBoxCount
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InputVoiceLevel
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetWorkMode
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Time
</UL>

<P><STRONG><a name="[235]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, _printf_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>

<P><STRONG><a name="[236]"></a>_printf_post_padding</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, _printf_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_post_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>

<P><STRONG><a name="[234]"></a>_printf_str</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, _printf_str.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[3e]"></a>_printf_int_dec</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, _printf_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_d
</UL>

<P><STRONG><a name="[238]"></a>__printf</STRONG> (Thumb, 308 bytes, Stack size 40 bytes, __printf_flags_wp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_percent
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_digit
</UL>
<BR>[Called By]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>

<P><STRONG><a name="[dc]"></a>memcmp</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, memcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoSave_ServerMAC
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoSave_ServerAddr
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_net_process
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_receive
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_Login
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTakesWriteCard
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArgCardOperation
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SuperCard_SetAdmin
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckBoxStatusChange
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSysConfig
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_ClientInfo
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_LockersArg
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_NetworkArg
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_HardwareArg
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_WriteCard
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_ReadCard
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_WriteCard_1Block
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_ReadCard_1Block
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_ActiveCard
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_WriteCard
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TopAdmin_Login
</UL>

<P><STRONG><a name="[10c]"></a>strcpy</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, strcpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PackageInOtherLockers
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_NetParameters
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_LockersParameters
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysConfig_Init
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_DateTime
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyInputDate
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowIDPosition
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetUIntValue
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPickUpTimeout
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPickUpAwaitTime
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InputAllowOpenBoxNum
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetCardSector
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_QueryBoxStatusList
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_QueryLockBoxList
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_QueryBoxRecord
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClrBoxNotice
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddCard2Box
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddValidCard
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InputName
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ChangePassword
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EmptyBoxCount
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Registration
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InputServerPort
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InputIp
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetNetSwitch
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InputMachineNum
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetIDCardSwitch
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBoxDoorCheckSwitch
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDebugMode
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTime
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Time
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AdminSetBoxNum
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InputUseDate
</UL>

<P><STRONG><a name="[a3]"></a>strlen</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, strlen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowMessage
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PackageInOtherLockers
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Open1Box
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_Login
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArgCardOperation
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Get_Version
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSysConfig
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysConfig_Init
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Str_Sample
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_SendStr
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyInputIpAddr
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UserAccess
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowIDPosition
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetUIntValue
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPickUpTimeout
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPickUpAwaitTime
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_QueryBoxStatusList
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_QueryLockBoxList
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_QueryBoxRecord
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClrBoxNotice
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddCard2Box
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EmptyBoxCount
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InputServerPort
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InputIp
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InputMachineNum
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetWorkMode
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Open1BoxFaild
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowSysVersion
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowTowRowMessage
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowIconMenu
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowListMenu
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PromptBigBox
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PromptBox
</UL>

<P><STRONG><a name="[1b3]"></a>strcat</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, strcat.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PackageInOtherLockers
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyInputIpAddr
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InputAllowOpenBoxNum
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetCardSector
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_QueryBoxStatusList
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_QueryBoxRecord
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddCard2Box
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InputName
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ChangePassword
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Registration
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InputIp
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetNetSwitch
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetIDCardSwitch
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBoxDoorCheckSwitch
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDebugMode
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTime
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Time
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AdminSetBoxNum
</UL>

<P><STRONG><a name="[97]"></a>__aeabi_memcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowIcon
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowPartPic
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowFillPic
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PackageInOtherLockers
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Open1Box
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_SetBoxInfo
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_CheckBoxEmpty
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Get_BoxDoorStatus
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_EepromWrite
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Get_Time
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Get_Version
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckBoxStatusChange
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParseBoxInsideStatus
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParseBoxDoorStatus
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UdpServer_SendData
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UdpClient_SendData
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SlavePacketDecoding
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCmdToExtendLockers
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_ApplyFor
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommDeal_Reply
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_PacketDeal
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AsciiStr_To_UInt
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fingerprint_GetChar
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCmdToFingerprint
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserConsign_ServerReply
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_ClientIdCode
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_LockersName
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClrBoxNotice
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Open1BoxFaild
</UL>

<P><STRONG><a name="[23b]"></a>__rt_memcpy</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[276]"></a>_memcpy_lastbytes</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_v6.o(.text), UNUSED)

<P><STRONG><a name="[10f]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArgCardOperation
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryBoxRecord
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_GetBoxInfo
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_SetBoxInfo
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Get_CardKey
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Get_MachineNum
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_LockersArg
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_NetworkArg
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_HardwareArg
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL>

<P><STRONG><a name="[277]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[278]"></a>__rt_memcpy_w</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[279]"></a>_memcpy_lastbytes_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[9a]"></a>__aeabi_memclr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowIcon
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_Login
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choice1BoxOpen_CheckResult
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanLocalBoxStatus
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wiegand_Init
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clean_RS485RxdBuf
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fingerprint_GetChar
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendDataToFingerprint
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TopAdmin_Login
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_QueryMenu
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TopAdmin_SetPassword
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_ClientIdCode
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_LockersName
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_AdminPassword
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Registration
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_TcpIpInfo
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_DateTime
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyInputDate
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyInputIpAddr
</UL>

<P><STRONG><a name="[23c]"></a>__rt_memclr</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>

<P><STRONG><a name="[48]"></a>_memset</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[ed]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTakeAway_OnlineAsk
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UserTakeAwwyFail
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PackageInOtherLockers
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Open1Box
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_Login
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTakes_OnlineAsk
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTakesWriteCard
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArgCardOperation
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SuperCard_SetAdmin
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreRecord_OpenBoxByFinger
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreRecord_OpenBoxByCard
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryBoxRecord
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadOneRecord_ToArrayBuf
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Clr_AllRecord
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Get_RecordAgain
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Get_Record
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Get_RecordPoint
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_UnlockNxBox
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_LockNxBox
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Get_AllBoxUserCard
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Get_BoxUserCard
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Set_BoxUserCard
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Get_ValidCardList
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Set_ValidCardList
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_GetBoxInfo
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_SetBoxInfo
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_CheckBoxEmpty
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Get_BoxDoorStatus
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_OpenOneBox
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_SetBoxNum
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Set_Lockers
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_VoiceCmdTest
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_SetVoiceLevel
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_PlayVoice
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Get_CardKey
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Set_CardKey
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_FindCard
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Get_ServerIP
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Set_ServerIP
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Get_IP
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Set_IP
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_EepromWrite
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_EepromRead
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_RingBuzzer
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_SysInit
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Set_Time
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Get_Time
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Get_MachineNum
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Set_MachineNum
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Get_Version
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyboardFunction
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Variable_Init
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateEmptyBoxList
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choice1BoxOpen_CheckResult
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choice1BoxOpen
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanExtendBoxStatus
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCmdToExtendLockers
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSysConfig
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_ClientInfo
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_LockersArg
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_NetworkArg
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_HardwareArg
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysConfig_Init
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LockersArg
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_NetworkArg
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_HardwareArg
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckRegistrationCode
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AsciiStr_To_UInt
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Decoding
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCmdToFingerprint
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_OnlineAsk
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConsignMode_WriteCard
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserConsign_OnlineAsk
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TopAdmin_Login
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clean_AllBox
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clean_OneBox
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open_AllBox
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open_OneBox
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowIDPosition
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UserConsignFail
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PlsCloseBoxDoor
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SuperAdmin_SysSetMenu
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TopAdmin_SysSetMenu
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TopAdminMenu
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Admin_QueryMenu
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Admin_LockersMenu
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Admin_BoxMenu
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Admin_ManageMenu
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Admin_SysSetMenu
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AdminMenu
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AdminCardOpertion
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InputAllowOpenBoxNum
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetCardSector
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_QueryBoxStatusList
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_QueryLockBoxList
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_QueryBoxRecord
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AskUnlockinBox
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AskLockinBox
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClrBoxNotice
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddCard2Box
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddValidCard
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InputName
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ChangePassword
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowPassword
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EmptyBoxCount
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Registration
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InputServerPort
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InputIp
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetNetSwitch
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InputMachineNum
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InputVoiceLevel
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetWorkMode
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetIDCardSwitch
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBoxDoorCheckSwitch
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDebugMode
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTime
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Time
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BoxBeLocked
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Open1BoxFaild
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AdminSetBoxNum
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InputBoxID
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InputUseDate
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ShowIconMenu
</UL>

<P><STRONG><a name="[27a]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[27b]"></a>__rt_memclr_w</STRONG> (Thumb, 78 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[23d]"></a>_memset_w</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memclr
</UL>

<P><STRONG><a name="[27c]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[27d]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[27e]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[237]"></a>_printf_int_common</STRONG> (Thumb, 178 bytes, Stack size 32 bytes, _printf_intcommon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[233]"></a>_printf_char_common</STRONG> (Thumb, 32 bytes, Stack size 64 bytes, _printf_char_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>

<P><STRONG><a name="[37]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _sputc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> noretval__2sprintf.o(.text)
</UL>
<P><STRONG><a name="[23e]"></a>_printf_cs_common</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[23f]"></a>_printf_char</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _printf_char.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[40]"></a>_printf_string</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_string &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_s
</UL>

<P><STRONG><a name="[42]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[27f]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[240]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[280]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[239]"></a>_is_digit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, __printf_wp.o(i._is_digit))
<BR><BR>[Called By]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[31]"></a>exit</STRONG> (ARM, 4608 bytes, Stack size unknown bytes, drv_lcd.o(.constdata))
<BR>[Address Reference Count : 1]<UL><LI> drv_lcd.o(.text)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[7f]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, drv_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER0_IRQHandler
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time0_Init
</UL>

<P><STRONG><a name="[9d]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, drv_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_Init
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_Init
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Init
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_Init
</UL>

<P><STRONG><a name="[38]"></a>_printf_input_char</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_char_common.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_common.o(.text)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
